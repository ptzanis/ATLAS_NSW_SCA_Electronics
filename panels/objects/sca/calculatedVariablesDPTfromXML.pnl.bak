V 14
1
LANG:1 0 
PANEL,-1 -1 625 506 N "_3DFace" 0
E E E E E 1 -1 -1 0  -191.3149253731343 0
""0  1
E "dyn_int
getChildNodesWithName (int docNum, int parentNode, string name)
{
//   DebugN(\"Inside \"+name,docNum);
  dyn_int result;
  int node = xmlFirstChild (docNum, parentNode);
  while (node >= 0)
    {
      if (xmlNodeName (docNum, node) == name)
	dynAppend (result, node);
      node = xmlNextSibling (docNum, node);
    }
  return result;
}

void assignPWVoltDPEs(string dpe)
{
      string address;
      dyn_string dsExceptionInfo;

       address = dpe;		// address can be generated from dpe after some mods ...
       strreplace (address, \"/\", \".\");
       
       fwPeriphAddress_setOPCUA (dpe /*dpe */ ,
 				\"OpcUaScaServer\" /* server name */ ,
 				15,
 				\"ns=2;s=\" + address,
 				\"OpcUaScaServerSub\" /* subscription */ ,
 				1 /* kind */ ,
 				1 /* variant */ ,
 				750 /* datatype */ ,
 				DPATTR_ADDR_MODE_INPUT_SPONT /* mode */ ,
 				\"\" /*poll group */ ,
 				dsExceptionInfo);
        
        
      
}

#uses \"CtrlXml\"

dyn_string analogItemsWithCalculatedVariable()
{
  string errMsg;
  int errLine;
  int errColumn;
  string configFileName=\"/home/bb5user/Documents/ATLNSWELTX/scripts/examples/ScaOpcUa/config16L1DDC16MMFE8_new.xml\";
  int docNum =
    xmlDocumentFromFile (configFileName, errMsg, errLine, errColumn);
  
  
  
 int firstNode = xmlFirstChild (docNum);
  if (firstNode < 0)
    {
      DebugN (\"Cant get the first child of the config file.\");
      return -1;
    }
  while (xmlNodeName (docNum, firstNode) != \"configuration\")
    {
      firstNode = xmlNextSibling (docNum, firstNode);
      if (firstNode < 0)
	{
	  DebugTN (\"configuration node not found, sorry.\");
	  return -1;
	}
    }
  // now firstNode holds configuration node   
  dyn_int numberOfBoards = getChildNodesWithName (docNum, firstNode, \"SCA\");
  dyn_int numberOfAnalogInput;
  
  int AnalogInputSystemChild;
  int AnalogInputChild;
  int CalculatedVariableChild;
  
  string name;
  string boardName;
  dyn_string AnalogInputChildItem;
  dyn_string CalculatedVariableItem;
  int CalculatedVariableItemCounter=1;
  
  dyn_string finalDpesWithCalculatedVariable;
  
  
  for (int i = 1; i <= dynlen (numberOfBoards); i++)
    {
       xmlGetElementAttribute (docNum,numberOfBoards[i], \"name\", boardName);    
    
       AnalogInputSystemChild=xmlFirstChild (docNum, numberOfBoards[i]);
       AnalogInputChild=xmlFirstChild (docNum, AnalogInputSystemChild);
       
       numberOfAnalogInput=getChildNodesWithName(docNum, AnalogInputSystemChild, \"AnalogInput\");
      
       dynClear(AnalogInputChildItem); 
       dynClear(CalculatedVariableItem); 
       

       for(int j=1;j<=dynlen(numberOfAnalogInput);j++)
       {
         xmlGetElementAttribute (docNum,numberOfAnalogInput[j], \"name\", name);       
         AnalogInputChildItem[j]=name;   
    
         CalculatedVariableChild=xmlFirstChild (docNum, numberOfAnalogInput[j]);
         
         
         if(CalculatedVariableChild!=-1)
         {
           xmlGetElementAttribute (docNum,CalculatedVariableChild, \"name\", CalculatedVariableItem[j]); 
           dynAppend(finalDpesWithCalculatedVariable,boardName+\"/ai/\"+AnalogInputChildItem[j]+\".\"+CalculatedVariableItem[j]);
          }
          else
          {
             CalculatedVariableItem[j]=\"\";
          }
     
       } //numberOfAnalogInput
              
    } //numberOfBoards
  
  
//   DebugN(finalDpesWithCalculatedVariable);
  
  return finalDpesWithCalculatedVariable;
    
}

dyn_string analogItemsTotal()
{
  string errMsg;
  int errLine;
  int errColumn;
  string configFileName=\"/home/bb5user/Documents/ATLNSWELTX/scripts/examples/ScaOpcUa/config16L1DDC16MMFE8_new.xml\";
  int docNum =
    xmlDocumentFromFile (configFileName, errMsg, errLine, errColumn);
  
  
  
 int firstNode = xmlFirstChild (docNum);
  if (firstNode < 0)
    {
      DebugN (\"Cant get the first child of the config file.\");
      return -1;
    }
  while (xmlNodeName (docNum, firstNode) != \"configuration\")
    {
      firstNode = xmlNextSibling (docNum, firstNode);
      if (firstNode < 0)
	{
	  DebugTN (\"configuration node not found, sorry.\");
	  return -1;
	}
    }
  // now firstNode holds configuration node   
  dyn_int numberOfBoards = getChildNodesWithName (docNum, firstNode, \"SCA\");
  dyn_int numberOfAnalogInput;
  
  int AnalogInputSystemChild;
  int AnalogInputChild;
  
  string name;
  string boardName;
  dyn_string AnalogInputChildItem;
  
  dyn_string allAnalogItems;
  
  
  for (int i = 1; i <= dynlen (numberOfBoards); i++)
    {
       xmlGetElementAttribute (docNum,numberOfBoards[i], \"name\", boardName);    
    
       AnalogInputSystemChild=xmlFirstChild (docNum, numberOfBoards[i]);
       AnalogInputChild=xmlFirstChild (docNum, AnalogInputSystemChild);
       
       numberOfAnalogInput=getChildNodesWithName(docNum, AnalogInputSystemChild, \"AnalogInput\");
      
       dynClear(AnalogInputChildItem); 
       

       for(int j=1;j<=dynlen(numberOfAnalogInput);j++)
       {
         xmlGetElementAttribute (docNum,numberOfAnalogInput[j], \"name\", name);       
         AnalogInputChildItem[j]=name; 
         dynAppend(allAnalogItems,boardName+\"/ai/\"+AnalogInputChildItem[j]);
    
       } //numberOfAnalogInput
              
    } //numberOfBoards
  
  
//   DebugN(finalDpesWithCalculatedVariable);
  
  return allAnalogItems;
}
  
 void assignOPCUAAdress(string dpe,string type)
  {
      string address;
      dyn_string dsExceptionInfo;

      dpe = dpe + \".\"+type;
      address = dpe;		// address can be generated from dpe after some mods ...
      strreplace (address, \"/\", \".\");
      fwPeriphAddress_setOPCUA (dpe /*dpe */ ,
				\"OpcUaScaServer\" /* server name */ ,
				15,
				\"ns=2;s=\" + address,
				\"OpcUaScaServerSub\" /* subscription */ ,
				1 /* kind */ ,
				1 /* variant */ ,
				750 /* datatype */ ,
				DPATTR_ADDR_MODE_INPUT_SPONT /* mode */ ,
				\"\" /*poll group */ ,
				dsExceptionInfo);  
        
    
  }
  
  
" 0
 3
"CBRef" "1"
"EClose" E
"dpi" "96"
0 0 0
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 0 
6 0
"titleBackground"
""
1 0 40 E E E 1 E 1 E N "STD_grey_dark" E N {255,255,255} E E
 E E
0 0 0 0 0 0
E E E
0
1
LANG:1 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 2 0 1 E 1.314925373134328 0 1 -190 -20 4 "[conical,-1.18,1.23,153,0,{0,0,0},0.762,{255,255,255}]" E -1 60 669 20
2 1
"PRIMITIVE_TEXT7"
""
1 190.75 7.65625 E E E 1 E 1 E N "FwAtlasBg" E N "_Window" E E
 E E
1 0 0 0 0 0
E E E
0
1
LANG:1 0 

4
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"transformable" "0"
E E 0 1 3 2 1 E U  0 E 190.75 7.65625 470 32.34375
0 2 2 "0s" 0 0 0 192 0 0  190.75 7.65625 1
1
LANG:1 27 Utopia,-1,21,5,75,0,0,0,0,0
0 1
LANG:1 25 XML->Analog Items DPT Fix
13 2
"PUSH_BUTTON1"
""
1 30 80 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
2 0 0 0 0 0
E E E
8
1
LANG:1 0 

1
"layoutAlignment" "AlignNone"
1
LANG:1 31 Sans Serif,-1,12,5,50,0,0,0,0,0
0  28 66 212 100

T 
1
LANG:1 22 Display SCA-Boards IDs
"#uses \"CtrlXml\"

main(mapping event)
{
  string errMsg;
  int errLine;
  int errColumn;
  string configFileName=\"/home/bb5user/Documents/ATLNSWELTX/scripts/examples/ScaOpcUa/config16L1DDC16MMFE8_new.xml\";
  int docNum =
    xmlDocumentFromFile (configFileName, errMsg, errLine, errColumn);
  
  
  
 int firstNode = xmlFirstChild (docNum);
  if (firstNode < 0)
    {
      DebugN (\"Cant get the first child of the config file.\");
      return -1;
    }
  while (xmlNodeName (docNum, firstNode) != \"configuration\")
    {
      firstNode = xmlNextSibling (docNum, firstNode);
      if (firstNode < 0)
	{
	  DebugTN (\"configuration node not found, sorry.\");
	  return -1;
	}
    }

  dyn_int numberOfBoards = getChildNodesWithName (docNum, firstNode, \"SCA\");
  dyn_int numberOfAnalogInput;
  
  int AnalogInputSystemChild;
  int AnalogInputChild;
  int CalculatedVariableChild;
  
  string name;
  string boardName;
  dyn_string AnalogInputChildItem;
  dyn_string CalculatedVariableItem;
  int CalculatedVariableItemCounter=1;
  
  
  dyn_string boards;
  dyn_string finalDpesWithCalculatedVariable;
  
  
  for (int i = 1; i <= dynlen (numberOfBoards); i++)
    {
       xmlGetElementAttribute (docNum,numberOfBoards[i], \"name\", boardName);    
       dynAppend(boards,boardName);
       AnalogInputSystemChild=xmlFirstChild (docNum, numberOfBoards[i]);
       AnalogInputChild=xmlFirstChild (docNum, AnalogInputSystemChild);
       
       numberOfAnalogInput=getChildNodesWithName(docNum, AnalogInputSystemChild, \"AnalogInput\");
      
       dynClear(AnalogInputChildItem); 
       dynClear(CalculatedVariableItem); 
       

       for(int j=1;j<=dynlen(numberOfAnalogInput);j++)
       {
         xmlGetElementAttribute (docNum,numberOfAnalogInput[j], \"name\", name);       
         AnalogInputChildItem[j]=name;   
    
         CalculatedVariableChild=xmlFirstChild (docNum, numberOfAnalogInput[j]);
         
         
         if(CalculatedVariableChild!=-1)
         {
           xmlGetElementAttribute (docNum,CalculatedVariableChild, \"name\", CalculatedVariableItem[j]); 
           dynAppend(finalDpesWithCalculatedVariable,boardName+\"/ai/\"+AnalogInputChildItem[j]+\".\"+CalculatedVariableItem[j]);
          }
          else
          {
             CalculatedVariableItem[j]=\"\";
          }
     
       } //numberOfAnalogInput
            
     
     
     boardList.appendLine(\"Boards\",boards[i]);
    } //numberOfBoards
  
  
    totalBoards.text(dynlen(boards));
  
//   DebugN(finalDpesWithCalculatedVariable);
  
//     DebugN(boards);
//      DebugN(AnalogInputChildItem); 
  
  
  
}" 0
 E E E
13 3
"closeButton"
""
1 511.625 403.85 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
3 0 0 0 0 0
E E E
8
1
LANG:1 0 

1
"layoutAlignment" "AlignNone"
1
LANG:1 27 Utopia,-1,16,5,75,0,0,0,0,0
0  509.625 394.15 571.875 420.15

T 
1
LANG:1 5 Close
"main(mapping event)
{
  PanelOff();
}" 0
 E E E
13 4
"PUSH_BUTTON2"
""
1 276.6539800880705 138.225 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
4 0 0 0 0 0
E E E
8
1
LANG:1 0 

1
"layoutAlignment" "AlignNone"
1
LANG:1 31 Sans Serif,-1,12,5,50,0,0,0,0,0
0  275 128.225 532 162.225

T 
1
LANG:1 25 Add power/Temp to ai DPEs
"main(mapping event)
{
   
dyn_dyn_string elements;
dyn_dyn_int types;  

     elements[1]=makeDynString(\"OpcUaScaServerAnalogInput\",\"\");
     elements[2]=makeDynString(\"\",\"value\");
     elements[3]=makeDynString(\"\",\"rawValue\");
     elements[4]=makeDynString(\"\",\"power\");
     elements[5]=makeDynString(\"\",\"temperature\");
     
     types[1]=makeDynInt(DPEL_STRUCT);
     types[2]=makeDynInt(0,DPEL_FLOAT);
     types[3]=makeDynInt(0,DPEL_UINT);
     types[4]=makeDynInt(0,DPEL_FLOAT);
     types[5]=makeDynInt(0,DPEL_FLOAT);     
     
    dpTypeChange(elements,types); 
   
}" 0
 E E E
13 5
"PUSH_BUTTON3"
""
1 277.0625 193.075 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
5 0 0 0 0 0
E E E
8
1
LANG:1 0 

1
"layoutAlignment" "AlignNone"
1
LANG:1 31 Sans Serif,-1,12,5,50,0,0,0,0,0
0  275 183 532 217

T 
1
LANG:1 32 Assign OPC UA to power/temp DPEs
"main(mapping event)
{
    
  dyn_string analogItemsWithCalculatedVariableList=analogItemsWithCalculatedVariable();

  for(int i=1;i<=dynlen(analogItemsWithCalculatedVariableList);i++)
  {   
   assignPWVoltDPEs(analogItemsWithCalculatedVariableList[i]);             
  }
 
   
  DebugTN(\"Assign of Power/Temperature OPC UA Address:\",\"READY\");
  
  

  
}" 0
 E E E
13 7
"PUSH_BUTTON5"
""
1 258.375 282.875 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
7 0 0 0 0 0
E E E
8
1
LANG:1 0 

1
"layoutAlignment" "AlignNone"
1
LANG:1 31 Sans Serif,-1,12,5,50,0,0,0,0,0
0  256.375 270.15 404.375 307.15

T 
1
LANG:1 20 Assign OPC UA Adress
"main(mapping event)
{

  dyn_string analogItemsTotalList=analogItemsTotal();
  string dpElement=parameterBox.text();
  
  for(int i=1;i<=dynlen(analogItemsTotalList);i++)
  {     
  assignOPCUAAdress(analogItemsTotalList[i],dpElement);      
  }
  
    DebugTN(\"Assign of \"+dpElement+\" OPC UA Address:\",\"READY\");
  
}" 0
 E E E
30 8
"FRAME1"
""
1 280 53 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
8 0 0 0 0 0
E E E
1
1
LANG:1 0 

3
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 3 2 1 E 1 0 0.8831168831168831 -30.43992537313443 205.1948051948052 0 E 280 53 601 131
1
LANG:1 30 Sans Serif,9,-1,5,50,0,0,0,0,0
0 1
LANG:1 0 
22 10
"parameterBox"
""
1 420 280 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
10 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"layoutAlignment" "AlignNone"
1
LANG:1 30 Sans Serif,9,-1,5,50,0,0,0,0,0
0  418 274 542 300
2
1
LANG:1 5 value

0
1
LANG:1 8 rawValue

0

E
E
E
 1 0
25 11
"boardList"
""
1 30 110 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
11 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"layoutAlignment" "AlignNone"
1
LANG:1 30 Sans Serif,9,-1,5,50,0,0,0,0,0
0  28 108 212 412.0000000000001
EE 1 0 1 1 0 "Boards" 6 1 0 "s" 1
LANG:1 6 Boards
E
1
LANG:1 0 

177 
15 15 10 0
1
LANG:1 30 Sans Serif,9,-1,5,50,0,0,0,0,0
0 0 1 0 1 7
1 0
30 12
"FRAME2"
""
1 280 53 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
12 0 0 0 0 0
E E E
1
1
LANG:1 0 

3
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 3 2 1 E 1.00274953358209 0 1.558441558441558 -31.64972014925411 27.40259740259741 0 E 280 53 601 131
1
LANG:1 30 Sans Serif,9,-1,5,50,0,0,0,0,0
0 1
LANG:1 0 
2 13
"PRIMITIVE_TEXT8"
""
1 32 432 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
13 0 0 0 0 0
E E E
0
1
LANG:1 0 

4
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"transformable" "0"
E E 0 1 3 2 1 E U  0 E 32 432 69 446
0 2 2 "0s" 0 0 0 192 0 0  32 432 1
1
LANG:1 30 Sans Serif,9,-1,5,50,0,0,0,0,0
0 1
LANG:1 6 Total:
14 14
"totalBoards"
""
1 70 430 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
14 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"layoutAlignment" "AlignNone"
1
LANG:1 30 Sans Serif,9,-1,5,50,0,0,0,0,0
0  68 425 201 449
3 "0s" 0 0 0 1 0 -1  E E E
0
LAYER, 1 
1
LANG:1 0 
0
LAYER, 2 
1
LANG:1 0 
0
LAYER, 3 
1
LANG:1 0 
0
LAYER, 4 
1
LANG:1 0 
0
LAYER, 5 
1
LANG:1 0 
0
LAYER, 6 
1
LANG:1 0 
0
LAYER, 7 
1
LANG:1 0 
0
0
