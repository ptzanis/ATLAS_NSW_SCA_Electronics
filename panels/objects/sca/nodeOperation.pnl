V 14
1
LANG:1 0 
PANEL,-1 -1 1918 1070 N "_3DFace" 4
"$mode"
"$node"
"$sector"
"$type"
"main()
{        
     string mode=$mode;  
     string node=$node; 
     string type=$type; 
     string sector=$sector; 
     int x=1212;
     int y=54;//10
     string batchID;
     bool runStatus;
     
     
addSymbol(myModuleName(), myPanelName(),\"objects/dateTimeWidget.pnl\",\"dateSelection\",makeDynString(\"$sStartDate:\"+\"\",\"$sEndDate:\"+\"\",\"$sStartTime:\"+\"\",\"$sEndTime:\"+\"\",\"$bDateAndTime:\"+\"TRUE\",\"$bShowTimeZone:\"+\"FALSE\",\"$bEnabled:\"+\"TRUE\",\"$sTimeZone:\"+\"0\",\"$iTimePeriod:\"+\"86400\"),304,1016,0,1,1);    
        
  RootPanelOnModule(\"objects/chamberHolder.pnl\", \"channels\", \"channelsModule\"+\"_N\"+node, makeDynString(\"$node:\"+node,\"$mode:\"+mode,\"$type:\"+type,\"$sector:\"+sector));         
  if(mode==\"ValidationQA\")
     {   
    dpGet(\"N\"+node+\".BatchId\",batchID);
   addSymbol(myModuleName(), myPanelName(), \"objects/nodeActionValidation.pnl\", \"nodeAction\"+node+\"_\"+type,
               makeDynString(\"$node:\"+node,\"$type:\"+type,\"$mode:\"+mode,\"$batchID:\"+batchID,\"$sector:\"+sector,\"$x:\"+x,\"$y:\"+y), x, y, 0, 1, 1);   
   
   RootPanelOnModule(\"empty.pnl\", \"about\", \"extraModule\"+\"_N\"+node,\"\"); 
   delay(1);
   RootPanelOnModule( \"objects/extraHolder.pnl\",\"extraHolder\", \"extraModule\"+\"_N\"+node, makeDynString(\"$node:\"+node), 0, 0, 0, 1, 1); 
   
  
     }    
     
     
     
     
     
     
    if(mode==\"CosmicsBasic\" || mode==\"CosmicsExtra\")     
     {  

       
     int nodeStart;
    if(sector==\"1\")
        nodeStart=1;
    if(sector==\"2\")
        nodeStart=5; 
  

    
    for(int i=nodeStart;i<=(nodeStart+3);i++)
    {
        dpGet(\"N\"+i+\".Mode\",mode);
        dpGet(\"N\"+i+\".ChamberType\",type);
        dpGet(\"N\"+i+\".BatchId\",batchID);
        
        addSymbol(myModuleName(), myPanelName(), \"objects/nodeActionCosmics.pnl\", \"nodeAction\"+node+\"_\"+type,
               makeDynString(\"$node:\"+i,\"$type:\"+type,\"$mode:\"+mode,\"$batchID:\"+batchID,\"$sector:\"+sector,\"$x:\"+x,\"$y:\"+y), x, y, 0, 1, 1); 
     y=y+210;     
     
   RootPanelOnModule(\"empty.pnl\", \"about\", \"extraModule\"+\"_N\"+node,\"\"); 
   delay(1);
   RootPanelOnModule( \"objects/extraHolder.pnl\",\"extraHolder\", \"extraModule\"+\"_N\"+sector, makeDynString(\"$node:\"+sector), 0, 0, 0, 1, 1);      
     
     
    }

           addSymbol(myModuleName(), myPanelName(), \"objects/sectorAction.pnl\", \"sectorAction\"+\"_\"+sector,
               makeDynString(\"$sector:\"+sector), x+24, y+32, 0, 1, 1);  
    
     addSymbol(myModuleName(), myPanelName(), \"objects/safetyLight.pnl\", \"safetyLight\"+node,makeDynString(), x-1, y+52, 0, 1, 1);   
   }  
      
      
}" 0
 E E E E 1 -1 -1 0  190 -1.999999999999986
""0  1
E "#uses \"HVMMGeneral.ctl\"
void exportLogbook(string node)
{
    string filePath=PROJ_PATH+\"scripts/libs/archiveLogbook.ctl\";
    file export;
    export=fopen(filePath,\"a\");  
    string mode,startTime,endTime,chamber,batchID;
    dpGet(\"N\"+node+\".Mode\",mode);
    dpGet(\"N\"+node+\".ChamberType\",chamber);
    dpGet(\"N\"+node+\".BatchId\",batchID);
    dpGet(\"N\"+node+\".Archiving.StartTime\",startTime);
    dpGet(\"N\"+node+\".Archiving.EndTime\",endTime);
    
    string envStation, gas, humidity, gif;
    dpGet(\"ALL.ExtraMode.Env\",envStation);
    dpGet(\"ALL.ExtraMode.Gas\",gas);
    dpGet(\"ALL.ExtraMode.MMHumidity\",humidity);
    dpGet(\"ALL.ExtraMode.GIF\",gif);    
    
    fprintf(export,\"%s \\n\",\"Node: \"+node+\" | Mode: \"+mode+\" | Chamber: \"+chamber+\" | BatchID: \"+batchID+\" | Start: \"+startTime+\" | End: \"+endTime+\" | Env/Gas/Hum/GIF \"+substr(envStation,0,1)+\"/\"+substr(gas,0,1)+\"/\"+substr(humidity,0,1)+\"/\"+substr(gif,0,1));                    
  
    fclose(export);

}

bool exportHVData(string valueType, dyn_string channels ,dyn_string channelsAlias, string start, string end, string folderPath) {

    dyn_dyn_anytype archived;
    string query, filePath;
    
    for (int i = 1; i <= dynlen(channels); i++) {
        query = \"SELECT ALL '_original.._stime', '_original.._value' FROM 'CAEN/\" + channels[i] +
                \".actual.\" + valueType + \"' TIMERANGE(\\\"\" + start + \"\\\",\\\"\" + end +\"\\\",1,0)\";
        
        dpQuery(query, archived);
        
        file export;
        checkOrCreateDirectory(folderPath+\"HV/\");
        filePath = folderPath +\"HV/\"+ valueType + \"_\" + channelsAlias[i] + \".dat\";
        strreplace(filePath, \"/\", \"//\");   
        
        export = fopen(filePath, \"a\");
                          
        for (int j = 2; j <= dynlen(archived); j++) { 
          if(valueType==\"iMon\"){ fprintf(export, \"%s \\t %2.3f \\n\", formatTime(\"%m/%d/%Y_%H:%M:%S\", archived[j][2]), archived[j][3]); }
          if(valueType==\"vMon\"){ fprintf(export, \"%s \\t %3.2f \\n\", formatTime(\"%m/%d/%Y_%H:%M:%S\", archived[j][2]), archived[j][3]); }
        }
        fclose(export);
    }
    DebugN(valueType+\" HV Data Exported!\");
    return TRUE;
}
/*
bool exportHVCombinedData( dyn_string channels ,dyn_string channelsAlias, string start, string end, string folderPath) {

    dyn_dyn_anytype archivedVoltage, archivedCurrent;
    string queryVoltage, queryCurrent, filePath;
    
    for (int i = 1; i <= dynlen(channels); i++) {
        queryVoltage = \"SELECT ALL '_original.._stime', '_original.._value' FROM 'CAEN/\" + channels[i] +
                \".actual.\" + \"vMon\" + \"' TIMERANGE(\\\"\" + start + \"\\\",\\\"\" + end +\"\\\",1,0)\";
        queryCurrent = \"SELECT ALL '_original.._stime', '_original.._value' FROM 'CAEN/\" + channels[i] +
                \".actual.\" + \"iMon\" + \"' TIMERANGE(\\\"\" + start + \"\\\",\\\"\" + end +\"\\\",1,0)\";        
        
        dpQuery(queryVoltage, archivedVoltage);
        dpQuery(queryCurrent, archivedCurrent);        
        
        file export;
        checkOrCreateDirectory(folderPath+\"HV/\");
        filePath = folderPath +\"HV/\"+ channelsAlias[i] + \".dat\";
        strreplace(filePath, \"/\", \"//\");   
        
        export = fopen(filePath, \"a\");
        
        DebugN(\"vMon Length \",dynlen(archivedVoltage));
        DebugN(\"iMon Length \",dynlen(archivedCurrent));
                          
        for (int j = 2; j <= dynlen(archivedVoltage); j++) { 
           fprintf(export, \"%s \\t %3.2f \\t \\t %2.3f \\n\", formatTime(\"%m/%d/%Y_%H:%M:%S\", archivedCurrent[j][2]), archivedVoltage[j][3],archivedCurrent[j][3]); 

        }
        fclose(export);
    }
    DebugN(\" HV Combined Data Exported!\");
    return TRUE;
}

*/


bool exportEnvData( dyn_string channels , string start, string end, string folderPath) {

    dyn_dyn_anytype archivedPressure, archivedTemperature, archivedHumidity;
    string queryPressure, queryTemperature, queryHumidity; 
    string filePath;
    
        queryPressure = \"SELECT ALL '_original.._stime', '_original.._value' FROM '\" + channels[1] + \"' TIMERANGE(\\\"\" + start + \"\\\",\\\"\" + end +\"\\\",1,0)\";
        queryTemperature = \"SELECT ALL '_original.._stime', '_original.._value' FROM '\" + channels[2] + \"' TIMERANGE(\\\"\" + start + \"\\\",\\\"\" + end +\"\\\",1,0)\";
        queryHumidity = \"SELECT ALL '_original.._stime', '_original.._value' FROM '\" + channels[3] + \"' TIMERANGE(\\\"\" + start + \"\\\",\\\"\" + end +\"\\\",1,0)\";
        
        dpQuery(queryPressure, archivedPressure);
        dpQuery(queryTemperature, archivedTemperature);
        dpQuery(queryHumidity, archivedHumidity);
        
        file export;
        checkOrCreateDirectory(folderPath+\"EnvStation/\");
        filePath = folderPath +\"EnvStation/\"+ \"envData\" + \".dat\";
        strreplace(filePath, \"/\", \"//\");   
        
        export = fopen(filePath, \"a\");
        fprintf(export, \"%s \\n\",\"Time[m/d/Y_H:M:S]\"+\"\\t\"+\"Pressure[mbar]\"+\"\\t\"+\"Temperature[C]\"+\"\\t\"+\"Humidity[%]\");                           
        for (int j = 2; j <= dynlen(archivedPressure); j++) { 
        fprintf(export, \"%s \\t %4.2f \\t %2.2f \\t \\t %2.2f \\n\", formatTime(\"%m/%d/%Y_%H:%M:%S\", archivedPressure[j][2]), archivedPressure[j][3],archivedTemperature[j][3],archivedHumidity[j][3]); 

        }
        fclose(export);

    DebugN(\"EnvStation Data Exported!\");
    return TRUE;
}

bool exportGasData( dyn_string channels , string start, string end, string folderPath) {

    dyn_dyn_anytype archivedInlet, archivedOutlet, archivedPressure;
    string queryInlet, queryOutlet, queryPressure; 
    string filePath;
    float archivedLeak;
    
        queryInlet = \"SELECT ALL '_original.._stime', '_original.._value' FROM '\" + channels[1] + \"' TIMERANGE(\\\"\" + start + \"\\\",\\\"\" + end +\"\\\",1,0)\";
        queryOutlet = \"SELECT ALL '_original.._stime', '_original.._value' FROM '\" + channels[2] + \"' TIMERANGE(\\\"\" + start + \"\\\",\\\"\" + end +\"\\\",1,0)\";
        queryPressure = \"SELECT ALL '_original.._stime', '_original.._value' FROM '\" + channels[3] + \"' TIMERANGE(\\\"\" + start + \"\\\",\\\"\" + end +\"\\\",1,0)\";
        
        dpQuery(queryInlet, archivedInlet);
        dpQuery(queryOutlet, archivedOutlet);
        dpQuery(queryPressure, archivedPressure);
        
        file export;
        checkOrCreateDirectory(folderPath+\"Gas/\");
        filePath = folderPath +\"Gas/\"+ \"gasData\" + \".dat\";
        strreplace(filePath, \"/\", \"//\");   
        
        export = fopen(filePath, \"a\");
        fprintf(export, \"%s \\n\",\"Time[m/d/Y_H:M:S]\"+\"\\t\"+\"Inlet[L/h]\"+\"\\t\"+\"Outlet[L/h]\"+\"\\t\"+\"Leak[L/h]\"+\"\\t\"+\"Pressure[mbar]\");                           
        for (int j = 2; j <= dynlen(archivedPressure); j++) { 
        archivedLeak=archivedInlet[j][3]-archivedOutlet[j][3];
        fprintf(export, \"%s \\t %2.3f \\t %2.3f \\t %2.3f \\t %2.2f \\n\", formatTime(\"%m/%d/%Y_%H:%M:%S\", archivedInlet[j][2]), archivedInlet[j][3],archivedOutlet[j][3],archivedLeak,archivedPressure[j][3]); 

        }
        fclose(export);

    DebugN(\"Gas Data Exported!\");
    return TRUE;
}

bool exportHumData( dyn_string channels , string start, string end, string folderPath) {

    dyn_dyn_anytype archivedHum;
    string queryHum; 
    string filePath;
    
        queryHum = \"SELECT ALL '_original.._stime', '_original.._value' FROM '\" + channels[1] + \"' TIMERANGE(\\\"\" + start + \"\\\",\\\"\" + end +\"\\\",1,0)\";

        
        dpQuery(queryHum, archivedHum);
        
        file export;
        checkOrCreateDirectory(folderPath+\"MM_Humidity/\");
        filePath = folderPath +\"MM_Humidity/\"+ \"humidityData\" + \".dat\";
        strreplace(filePath, \"/\", \"//\");   
        
        export = fopen(filePath, \"a\");
        fprintf(export, \"%s \\n\",\"Time[m/d/Y_H:M:S]\"+\"\\t\"+\"Humidity[%]\");                           
        for (int j = 2; j <= dynlen(archivedHum); j++) { 
        fprintf(export, \"%s \\t %2.2f \\n\", formatTime(\"%m/%d/%Y_%H:%M:%S\", archivedHum[j][2]), archivedHum[j][3]); 

        }
        fclose(export);

    DebugN(\"Humidity Data Exported!\");
    return TRUE;
}

bool exportGIFData( dyn_string channels , string start, string end, string folderPath) {
  
       dyn_string gifChannels;
        //DownStreamPos Or UpStreamPos
       gifChannels[1]=\"GIFFPP.Irradiator.SourceON\";
       gifChannels[2]=\"GIFFPP.Attenuators.UpStreamPos.A\";
       gifChannels[3]=\"GIFFPP.Attenuators.UpStreamPos.B\";
       gifChannels[4]=\"GIFFPP.Attenuators.UpStreamPos.C\";
       gifChannels[5]=\"GIFFPP.Attenuators.UpStreamPos.EffectiveAttenuation\";
       gifChannels[6]=\"GIFFPP.EnvParameters.Humidity_Inside_Bunker\";
       gifChannels[7]=\"GIFFPP.EnvParameters.Humidity_Outside_Bunker\";
       gifChannels[8]=\"GIFFPP.EnvParameters.Temp_Inside_Bunker\";
       gifChannels[9]=\"GIFFPP.EnvParameters.Temp_Outside_Bunker\";
       gifChannels[10]=\"GIFFPP.EnvParameters.Atmospheric_Pressure\";

    dyn_dyn_anytype archivedSource,archivedAttA,archivedAttB,archivedAttC,archivedAttEff,archivedHumIn,archivedHumOut,archivedTempIn,archivedTempOut,archivedAtmPress;
    string querySource,queryAttA,queryAttB,queryAttC,queryAttEff,queryHumIn,queryHumOut,queryTempIn,queryTempOut,queryAtmPress;
    string filePath;
    
        querySource= \"SELECT ALL '_original.._stime', '_original.._value' FROM '\" + channels[1] + \"' TIMERANGE(\\\"\" + start + \"\\\",\\\"\" + end +\"\\\",1,0)\";
        queryAttA= \"SELECT ALL '_original.._stime', '_original.._value' FROM '\" + channels[2] + \"' TIMERANGE(\\\"\" + start + \"\\\",\\\"\" + end +\"\\\",1,0)\";
        queryAttB= \"SELECT ALL '_original.._stime', '_original.._value' FROM '\" + channels[3] + \"' TIMERANGE(\\\"\" + start + \"\\\",\\\"\" + end +\"\\\",1,0)\";
        queryAttC= \"SELECT ALL '_original.._stime', '_original.._value' FROM '\" + channels[4] + \"' TIMERANGE(\\\"\" + start + \"\\\",\\\"\" + end +\"\\\",1,0)\";
        queryAttEff= \"SELECT ALL '_original.._stime', '_original.._value' FROM '\" + channels[5] + \"' TIMERANGE(\\\"\" + start + \"\\\",\\\"\" + end +\"\\\",1,0)\";
        queryHumIn= \"SELECT ALL '_original.._stime', '_original.._value' FROM '\" + channels[6] + \"' TIMERANGE(\\\"\" + start + \"\\\",\\\"\" + end +\"\\\",1,0)\";
        queryHumOut= \"SELECT ALL '_original.._stime', '_original.._value' FROM '\" + channels[7] + \"' TIMERANGE(\\\"\" + start + \"\\\",\\\"\" + end +\"\\\",1,0)\";
        queryTempIn= \"SELECT ALL '_original.._stime', '_original.._value' FROM '\" + channels[8] + \"' TIMERANGE(\\\"\" + start + \"\\\",\\\"\" + end +\"\\\",1,0)\";
        queryTempOut= \"SELECT ALL '_original.._stime', '_original.._value' FROM '\" + channels[9] + \"' TIMERANGE(\\\"\" + start + \"\\\",\\\"\" + end +\"\\\",1,0)\";
        queryAtmPress= \"SELECT ALL '_original.._stime', '_original.._value' FROM '\" + channels[10] + \"' TIMERANGE(\\\"\" + start + \"\\\",\\\"\" + end +\"\\\",1,0)\";
       
        
              
        dpQuery(querySource, archivedSource);
        dpQuery(queryAttA, archivedAttA);        
        dpQuery(queryAttB, archivedAttB);        
        dpQuery(queryAttC, archivedAttC);
        dpQuery(queryAttEff, archivedAttEff);
        dpQuery(queryHumIn, archivedHumIn);
        dpQuery(queryHumOut, archivedHumOut);
        dpQuery(queryTempIn, archivedTempIn);
        dpQuery(queryTempOut, archivedTempOut);     
        dpQuery(queryAtmPress, archivedAtmPress);        
        
        file export;
        checkOrCreateDirectory(folderPath+\"GIF/\");
        filePath = folderPath +\"GIF/\"+ \"gifData\" + \".dat\";
        strreplace(filePath, \"/\", \"//\");   
        
        export = fopen(filePath, \"a\");
        fprintf(export, \"%s \\n\",\"Time[m/d/Y_H:M:S]\"+ \"\\t\" +\"\\t\" + \"\\t\" +\"Source ON\"+ \"\\t\"+ \"A\"+\"\\t\"+\"B\"+\"\\t\"+ \"C\"+\"\\t\"+\"Effective\"+\"\\t\"+ \"Humidity IN\"+\"\\t\"+\"Humidity OUT\"+\"\\t\"+ \"Temp IN\"+\"\\t\"+\"Temp OUT\"+\"\\t\"+\"Atm. Pressure\");        
        for (int j = 2; j <= dynlen(archivedSource); j++) { 
            fprintf(export, \"%s \\t %s \\t %2.2f \\t %2.2f \\t %2.2f \\t %2.2f \\t %2.2f \\t %2.2f \\t %2.2f \\t %2.2f \\t %3.1f \\n\", formatTime(\"%d/%m/%Y_%H:%M:%S\", archivedSource[j][2])
                    ,archivedSource[j][3],archivedAttA[j][3],archivedAttB[j][3],archivedAttC[j][3],archivedAttEff[j][3],archivedHumIn[j][3],archivedHumOut[j][3],archivedTempIn[j][3],archivedTempOut[j][3],archivedAtmPress[j][3]);

        }
        fclose(export);

    DebugN(\"GIF++ Data Exported!\");
    return TRUE;
}

// v2.1.0 Export GIF Individual Data -----
bool exportIndividualDataGIF(string valueType, string parameterValueType ,dyn_string channels , string start, string end, string folderPath)
{

    dyn_dyn_anytype archived;
    string query, filePath;
    
    for (int i = 1; i <= dynlen(channels); i++) {
        query = \"SELECT ALL '_original.._stime', '_original.._value' FROM '\" + channels[i] +\"' TIMERANGE(\\\"\" + start + \"\\\",\\\"\" + end +\"\\\",1,0)\";
        
        dpQuery(query, archived);
        
        file export;
        checkOrCreateDirectory(folderPath+\"GIF/\");
        filePath = folderPath +\"GIF/\"+ valueType + \".dat\";
        strreplace(filePath, \"/\", \"//\");   
        
        export = fopen(filePath, \"a\");
        fprintf(export, \"%s \\n\",\"Time[m/d/Y_H:M:S]\"+ \"\\t\" +parameterValueType);                                  
        for (int j = 2; j <= dynlen(archived); j++) { 
          fprintf(export, \"%s \\t %3.1f \\n\", formatTime(\"%m/%d/%Y_%H:%M:%S\", archived[j][2]), archived[j][3]); 

        }
        fclose(export);
    }
    DebugN(valueType+\" Data Exported!\");
    return TRUE;  
  
  
  
  
  
  
}

// ------------------------------------------------------------------------------------------------------------------------


bool exportInfoFile(string node,string chamberName,string batchID,string mode,dyn_string mappingChannelsToArchive,dyn_string channelsToArchive,string startTime,string endTime,string folderPath)
{
  
   file export;
   string filePath;
   
   filePath = folderPath +\"info\"+ \".dat\";
   export = fopen(filePath, \"a\");
   fprintf(export, \"%s \\n\", \"---- Info ----\");
   fprintf(export, \"%s \\n\", \"Node      : \"+node);
   fprintf(export, \"%s \\n\", \"Chamber   : \"+chamberName);  
   fprintf(export, \"%s \\n\", \"BatchID   : \"+batchID);
   fprintf(export, \"%s \\n\", \"Mode      : \"+mode);
   fprintf(export, \"%s \\n\", \"Start Time: \"+startTime);
   fprintf(export, \"%s \\n\", \"End Time  : \"+endTime);
   fprintf(export, \"%s \\n\", \"---- Channel Mapping ----\"); 
   for(int i=1;i<=dynlen(mappingChannelsToArchive);i++)
   {
   fprintf(export, \"%-4s \\t %s \\n\",mappingChannelsToArchive[i],channelsToArchive[i]);           
   }
   if(mode==\"CosmicsBasic\")
   {
   fprintf(export, \"%s \\n\", \"---- Hospital Line Sections ----\"); 
   dyn_string sections;
   dpGet(\"N\"+node+\".HospitalLine.Sections\",sections);
   for(int i=1;i<=dynlen(sections);i++)
   {
   fprintf(export,\"%s \\n\",sections[i]);           
   }   
   }   
   
   
   fclose(export);
   DebugN(chamberName+\" \"+batchID+\" -> Info File Exported!\");
   return TRUE;
   
}


string getEndTime() {
    
    time endTime;
    string endDateString, endTimeString, endString;
 
    string endDateTextBox = \"dateSelection.endDateField\";
    string endTimeTextBox = \"dateSelection.endTimeField\";
    
    getValue(endDateTextBox, \"text\", endDateString);
    getValue(endTimeTextBox, \"text\", endTimeString);
    
    endString = endDateString + \" \" + endTimeString;
    
    if (!fwGeneral_hasCorrectFormat(endString)) {
        DebugN(\"The ending time provided is wrong, check again and retry.\");
        return;
    }
    
    endTime = fwGeneral_stringToDate(endString);
    endString = formatTime(\"%Y.%m.%d %H:%M:%S\", endTime);
    
    return endString;
}

string getStartTime() {
    
    time startTime;
    string startDateString, startTimeString, startString;
    
    string startDateTextBox = \"dateSelection.startDateField\";
    string startTimeTextBox = \"dateSelection.startTimeField\";
    
    getValue(startDateTextBox, \"text\", startDateString);
    getValue(startTimeTextBox, \"text\", startTimeString);

    startString = startDateString + \" \" + startTimeString;    
    
    if (!fwGeneral_hasCorrectFormat(startString)) {
        DebugN(\"The starting time provided is wrong, check again and retry.\");
        return;
    }
    
    startTime = fwGeneral_stringToDate(startString);
    startString = formatTime(\"%Y.%m.%d %H:%M:%S\", startTime);
    
    return startString;
}

// Time Widget-----
/*
  
  
 */

bool checkInputs(int input)
{
  
  string vStartText,vEndText,delayText;
  getValue(\"vStart\"+input,\"text\",vStartText);  
  getValue(\"vEnd\"+input,\"text\",vEndText);    
  getValue(\"delay\"+input,\"text\",delayText);  


  
  int vStart=(int)vStartText;
  int vEnd=(int)vEndText;
  
  if(input>0)
  {
      string vStartTextPrevious,vEndTextPrevious;
      int inputPrevious=input-1;
      getValue(\"vStart\"+inputPrevious,\"text\",vStartTextPrevious);  
      getValue(\"vEnd\"+inputPrevious,\"text\",vEndTextPrevious);   
      
      int vStartPrevious=(int)vStartTextPrevious;
      int vEndPrevious=(int)vEndTextPrevious;   
    
   if(vStartText!=\"\" && vEndText!=\"\" && delayText!=\"\" && vStart<vEnd && vStart>=vEndPrevious)
  {
    setValue(\"status\"+input,\"text\",\"OK\");
    setValue(\"status\"+input,\"backCol\",\"cyan\");
    startAuto.enabled(1);  
    stepBox.itemEnabled(input+1,1);    
    return TRUE; 
  }
  else
  {
    setValue(\"status\"+input,\"text\",\"NOT OK\");
    setValue(\"status\"+input,\"backCol\",\"Red\");
    startAuto.enabled(0);  
    return FALSE;     
  }
    
  }  
  if(input==0)
  {
   
   if(vStartText!=\"\" && vEndText!=\"\" && delayText!=\"\" && vStart<vEnd)
  {
    setValue(\"status\"+input,\"text\",\"OK\");
    setValue(\"status\"+input,\"backCol\",\"cyan\");  
    startAuto.enabled(1);
    stepBox.itemEnabled(input+1,1);     
    return TRUE;    
  }
  else
  {
    setValue(\"status\"+input,\"text\",\"NOT OK\");
    setValue(\"status\"+input,\"backCol\",\"Red\");
    startAuto.enabled(0);  
   return FALSE;         
  }   
   
   
   
   
   
  } 
  
}




" 0
 3
"CBRef" "1"
"EClose" "main()
{
  alarmToggle.checked(FALSE);
}" 0

"dpi" "96"
0 0 0
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 0 
20 49
"extraChoice"
""
1 616 964.78125 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
49 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"layoutAlignment" "AlignNone"
1
LANG:1 27 Utopia,-1,12,5,75,0,0,0,0,0
0  592.0008926611025 929.0000000000001 702.8536997357464 1000.5625
4
T 
1
LANG:1 10 EnvStation

0 
1
LANG:1 0 
E E
0 0 0 0 0
T 
1
LANG:1 3 Gas

0 
1
LANG:1 0 
E E
0 0 0 0 0
T 
1
LANG:1 11 MM Humidity

0 
1
LANG:1 0 
E E
0 0 0 0 0
T 
1
LANG:1 5 GIF++

0 
1
LANG:1 0 
E E
0 0 0 0 0
0
"main()
{
    bool isEnvOn, isGasOn, isHumOn,isGifOn;
    dpGet(\"ALL.ExtraMode.Env\",isEnvOn);
    dpGet(\"ALL.ExtraMode.Gas\",isGasOn);
    dpGet(\"ALL.ExtraMode.MMHumidity\",isHumOn);
    dpGet(\"ALL.ExtraMode.GIF\",isGifOn);
    
    if(!isEnvOn)
      this.itemEnabled(0,FALSE);
    if(!isGasOn)
      this.itemEnabled(1,FALSE);
    if(!isHumOn)
      this.itemEnabled(2,FALSE);
    if(!isGifOn)
      this.itemEnabled(3,FALSE);

    
}" 0
E30 52
"FRAME8"
""
1 380 114 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
52 0 0 0 0 0
E E E
1
1
LANG:1 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 0 1 0 1 E 0.136046511627907 0 0.09926470588235302 535.3023255813953 908.6838235294117 0 E 380 114 1241 931
1
LANG:1 27 Utopia,-1,12,5,75,0,0,0,0,0
0 1
LANG:1 5 Extra
30 0
"histosFrame"
""
1 380 114 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
0 0 0 0 0 0
E E E
1
1
LANG:1 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 0 1 0 1 E 1.065116279069768 0 1.096813725490196 -111.7441860465118 -127.0367647058824 0 E 380 114 1241 931
1
LANG:1 27 Utopia,-1,16,5,75,0,0,0,0,0
0 1
LANG:1 8 HV Plots
30 2
"actionsFrame"
""
1 380 114 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
2 0 0 0 0 0
E E E
1
1
LANG:1 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 0 1 0 1 E 0.8232558139534889 0 1.31413861141941 897.1627906976731 -152.1489086200513 0 E 380 114 1241 931
1
LANG:1 27 Utopia,-1,16,5,75,0,0,0,0,0
0 1
LANG:1 10 HV Actions
30 3
"extraFrame"
""
1 380 114 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
3 0 0 0 0 0
E E E
1
1
LANG:1 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
"main()
{ 
  
   this.text(\"|\");
   bool isEnvOn,isGasOn,isHumOn,isGifOn;
   dpGet(\"ALL.ExtraMode.Env\",isEnvOn);
   dpGet(\"ALL.ExtraMode.Gas\",isGasOn); 
   dpGet(\"ALL.ExtraMode.MMHumidity\",isHumOn);
   dpGet(\"ALL.ExtraMode.GIF\",isGifOn); 
 
   if(isEnvOn)
   this.text(this.text()+\" EnvStation |\");  
   if(isGasOn)
   this.text(this.text()+\" Gas |\");    
   if(isHumOn)
   this.text(this.text()+\" MM Humidity |\");   
   if(isGifOn)
   this.text(this.text()+\" GIF++ |\");   
  
  
}" 0
 E 0 0 1 0 1 E 0.3372093023255816 0 0.3627450980392155 -128.139534883721 732.6470588235295 0 E 380 114 1241 931
1
LANG:1 27 Utopia,-1,13,5,75,0,0,0,0,0
0 1
LANG:1 1 |
29 6
"channelsModule"
""
1 -8 15 E E E 1 E 1 E N "_3DText" E N "WF_PanelBackground" E E
 E E
6 0 0 0 0 0
E E E
0
1
LANG:1 0 

2
"sizePolicy" "Fixed Expanding"
"layoutAlignment" "AlignNone"
1
LANG:1 27 Utopia,-1,12,5,50,0,0,0,0,0
0  2.089171974522308 13.94168977098263 289.0891719745217 758.941689770982
15 Canvas.Canvas.1
0
"main()
{
  //     string mode=$mode;  
     string node=$node; 
//     string type=$type; 
//     int sector=$sector; 
    
    this.ModuleName = \"channelsModule\"+\"_N\"+node; 


}" 0
30 1
"channelsFrame"
""
1 380 114 E E E 1 E 1 E N "Black" E N {0,0,0} E E
 E E
1 0 0 0 0 0
E E E
1
1
LANG:1 0 

4
"hoverfclr" "N \"Black\""
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E 0.3372093023255814 0 0.9338235294117647 -128.1395348837209 -108.4558823529412 0 E 380 114 1241 931
1
LANG:1 27 Utopia,-1,16,5,75,0,0,0,0,0
0 1
LANG:1 11 HV Channels
13 7
"hideShowBrowserButton"
""
1 -17.5630914826499 214.8073918269397 E E E 1 E 1 E N "_ButtonText" E N "white" E E
 E E
7 0 0 0 0 0
E E E
1
1
LANG:1 0 

2
"hoverbclr" "N {236,236,236}"
"layoutAlignment" "AlignCenter"
1
LANG:1 27 Utopia,-1,12,5,75,0,0,0,0,0
0  -9.50000000000005 760.0117187499995 284.4999999999997 775.6353400735292

T 
1
LANG:1 15 Hide Extra Info
"main()
{
    int xButton, yButton, xContainer, yContainer, xChambersBgPos, yChambersBgPos,
        xChambersBgSize, yChambersBgSize, difYPos;
    
    difYPos = 295;    
    getValue(\"hideShowBrowserButton\", \"position\", xButton, yButton);
    getValue(\"hideShowButtonContainer\", \"position\", xContainer, yContainer);
    getValue(\"channelsModule\", \"position\", xChambersBgPos, yChambersBgPos);
    getValue(\"channelsModule\", \"size\", xChambersBgSize, yChambersBgSize);
    
    if (hideShowBrowserButton.text == \"Hide Extra Info\") {
      
        hideShowBrowserButton.position(xButton, yButton + difYPos);
        hideShowButtonContainer.position(xContainer, yContainer + difYPos);
        hideShowBrowserButton.text(\"Show Extra Info\");
        
        channelsModule.size(xChambersBgSize, yChambersBgSize + difYPos);
        extraModule.visible(FALSE);
      }
    else {
              
        yChambersBgPos = yChambersBgPos;        
        hideShowBrowserButton.position(xButton, yButton - difYPos);
        hideShowButtonContainer.position(xContainer, yContainer - difYPos);
        hideShowBrowserButton.text(\"Hide Extra Info\");

        channelsModule.size(xChambersBgSize, yChambersBgSize-difYPos);//yChambersBgSize - difYPos
          extraModule.visible(TRUE);
      }
    
}" 0
 E E E
6 8
"hideShowButtonContainer"
""
1 0 0 E E E 1 E 1 E N {0,0,0} E N {255,255,255} E E
 E E
8 0 0 0 0 0
E E E
0
1
LANG:1 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E -1 1 3 2 1 E 0.953125 0 0.7279411764705882 -24.53125 309.2205882352942 1 E 10 622 330 638
29 9
"alarmToggle"
""
1 1362.999999999991 27.3076923076923 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
9 0 0 0 0 0
E E E
0
1
LANG:1 0 

2
"skin" "enum 3"
"layoutAlignment" "AlignNone"
1
LANG:1 27 Utopia,-1,12,5,50,0,0,0,0,0
0  1362.999999999991 27.3076923076923 1402.999999999991 47.30769230769229
16 ToggleSwitch.ewo
1
0 "toggled" "(bool on)"
"  double downLimitValue,upLimitValue; 
  if(!on)
  {
  parameterText.text(\"[V]\"); 
  dpGet(\"ALL.AcceptanceLimits.Voltage.downLimit\",downLimitValue);    
  dpGet(\"ALL.AcceptanceLimits.Voltage.upLimit\",upLimitValue);    
  downLimit.text(\"<\"+downLimitValue);
  upLimit.text(\">\"+upLimitValue);
  downLimitField.backCol(\"red\");
  upLimitField.backCol(\"green\");
  touchChannels();
  }
  
  if(on)  
  {
  parameterText.text(\"[nA]\");
  dpGet(\"ALL.AcceptanceLimits.Current.downLimit\",downLimitValue);    
  dpGet(\"ALL.AcceptanceLimits.Current.upLimit\",upLimitValue);    
  downLimit.text(\"<\"+downLimitValue*1000);
  upLimit.text(\">\"+upLimitValue*1000); 
  downLimitField.backCol(\"green\");
  upLimitField.backCol(\"red\");
  touchChannels();
    
  }
"
E2 10
"PRIMITIVE_TEXT1"
""
1 1345.692307692299 23.23076923076924 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
10 0 0 0 0 0
E E E
0
1
LANG:1 0 

4
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"transformable" "0"
E E 2 1 3 2 1 E U  0 E 1345.692307692299 23.23076923076924 1362 48
0 2 2 "0s" 0 0 0 192 0 0  1345.692307692299 23.23076923076924 1
1
LANG:1 27 Utopia,-1,21,5,75,0,0,0,0,0
0 1
LANG:1 1 V
2 11
"PRIMITIVE_TEXT2"
""
1 1407.999999999991 22 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
11 0 0 0 0 0
E E E
0
1
LANG:1 0 

4
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"transformable" "0"
E E 2 1 3 2 1 E U  0 E 1407.999999999991 22 1418 47
0 2 2 "0s" 0 0 0 192 0 0  1407.999999999991 22 1
1
LANG:1 27 Utopia,-1,21,5,75,0,0,0,0,0
0 1
LANG:1 1 I
30 12
"FRAME1"
""
1 593 10 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
12 0 0 0 0 0
E E E
1
1
LANG:1 0 

3
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 2 1 3 2 1 E 5.561643835616435 0 1.145888594164457 -1960.054794520554 2.541114058355431 0 E 593 10 667 40
1
LANG:1 27 Utopia,-1,12,5,50,0,0,0,0,0
0 1
LANG:1 0 
6 13
"downLimitField"
""
1 18 88 E E E 1 E 1 E N {0,0,0} E N "red" E E
 E E
13 0 0 0 0 0
E E E
0
1
LANG:1 0 

3
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 3 2 1 E 0.6443268665490895 0 0.9999999999999996 1430.479446479439 -65.23076923076917 1 E 18 88 150 110
6 14
"RECTANGLE2"
""
1 18 88 E E E 1 E 1 E N {0,0,0} E N "Yellow" E E
 E E
14 0 0 0 0 0
E E E
0
1
LANG:1 0 

3
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 3 2 1 E 0.6443268665490895 0 0.9999999999999996 1515.530592863919 -65.23076923076917 1 E 18 88 150 110
6 15
"upLimitField"
""
1 18 88 E E E 1 E 1 E N {0,0,0} E N "Green" E E
 E E
15 0 0 0 0 0
E E E
0
1
LANG:1 0 

3
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 3 2 1 E 0.6443268665490895 0 0.9999999999999996 1600.581739248397 -65.23076923076917 1 E 18 88 150 110
6 16
"RECTANGLE4"
""
1 18 88 E E E 1 E 1 E N {0,0,0} E N "Grey" E E
 E E
16 0 0 0 0 0
E E E
0
1
LANG:1 0 

3
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 3 2 1 E 0.1464379242157022 0 0.9999999999999996 1420.594886594878 -65.23076923076917 1 E 18 88 150 110
2 20
"upLimit"
""
1 1627.442409442401 21.26923076923078 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
20 0 0 0 0 0
E E E
0
1
LANG:1 0 

4
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"transformable" "0"
"main()
{
   int upLimitValue;
  dpGet(\"ALL.AcceptanceLimits.Voltage.upLimit\",upLimitValue);    
  this.text(\">\"+upLimitValue);

}" 0
 E 2 1 3 2 1 E U  0 E 1627.442409442401 21.26923076923078 1684 46
0 2 2 "0s" 0 0 0 192 0 0  1627.442409442401 21.26923076923078 1
1
LANG:1 27 Utopia,-1,21,5,75,0,0,0,0,0
0 1
LANG:1 4 >XXX
2 21
"downLimit"
""
1 1457.420363587023 21.01923076923078 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
21 0 0 0 0 0
E E E
0
1
LANG:1 0 

4
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"transformable" "0"
"main()
{
   int downLimitValue;
  dpGet(\"ALL.AcceptanceLimits.Voltage.downLimit\",downLimitValue);    
  this.text(\"<\"+downLimitValue);

}" 0
 E 2 1 3 2 1 E U  0 E 1457.420363587023 21.01923076923078 1514 46
0 2 2 "0s" 0 0 0 192 0 0  1457.420363587023 21.01923076923078 1
1
LANG:1 27 Utopia,-1,21,5,75,0,0,0,0,0
0 1
LANG:1 4 <XXX
2 22
"parameterText"
""
1 1699.397435897426 19.60256410256412 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
22 0 0 0 0 0
E E E
0
1
LANG:1 0 

4
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"transformable" "0"
E E 2 1 3 2 1 E U  0 E 1699.397435897426 19.60256410256412 1729 45
0 2 2 "0s" 0 0 0 192 0 0  1699.397435897426 19.60256410256412 1
1
LANG:1 27 Utopia,-1,21,5,75,0,0,0,0,0
0 1
LANG:1 3 [V]
30 23
"FRAME3"
""
1 556 767 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
23 0 0 0 0 0
E E E
1
1
LANG:1 0 

3
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 2 1 3 2 1 E 1.125000000000001 0 1.035087719298253 1123.499999999999 -780.9122807017608 0 E 556 767 701 825
1
LANG:1 27 Utopia,-1,12,5,50,0,0,0,0,0
0 1
LANG:1 0 
6 25
"RECTANGLE5"
""
1 1828 1004 E E E 1 E 1 E N {0,0,0} E N {255,255,255} E E
 E E
25 0 0 0 0 0
E E E
0
1
LANG:1 0 

3
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E -1 1 3 2 1 E 1.084337349397592 0 0.9612832014851266 -165.1686746987976 -943.1283342910671 2  1 0  "pictures/Brookhaven Logo/BNL_bnllogo.gif" 4294967295 E 1828 1004 1911 1034
2 26
"PRIMITIVE_TEXT3"
""
1 1813 75 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
26 0 0 0 0 0
E E E
0
1
LANG:1 0 

4
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"transformable" "0"
E E 2 1 3 2 1 E 1 0 0.849444575253555 -3 -9.832624309039316 0 E 1813 75 1915 93
0 2 2 "0s" 0 0 0 192 0 0  1813 75 1
1
LANG:1 27 Utopia,-1,16,5,75,0,0,0,0,0
0 1
LANG:1 12 N.T.U.Athens
30 27
"FRAME4"
""
1 556 767 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
27 0 0 0 0 0
E E E
1
1
LANG:1 0 

3
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 2 1 3 2 1 E 0.7361111111111116 0 0.5263157894736841 813.183760683754 -388.1457489878541 0 E 556 767 701 825
1
LANG:1 27 Utopia,-1,12,5,50,0,0,0,0,0
0 1
LANG:1 0 
2 28
"PRIMITIVE_TEXT4"
""
1 1258 26 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
28 0 0 0 0 0
E E E
0
1
LANG:1 0 

4
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"transformable" "0"
E E 2 1 3 2 1 E 1.038461538461539 0 1.080033537302895 -76.38461538462329 -4.542410431413744 0 E 1258 26 1333 44
0 2 2 "0s" 0 0 0 192 0 0  1258 26 1
1
LANG:1 27 Utopia,-1,16,5,75,0,0,0,0,0
0 1
LANG:1 9 Archiving
7 30
"ELLIPSE3"
""
1 1901 161 E E E 1 E 1 E N {0,0,0} E N {255,255,255} E E
 E E
30 0 0 0 0 0
E E E
0
1
LANG:1 0 

3
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "1"
"// SimpleCtrlScriptStart {invalid}
main()
{
  EP_setBackColor();
}

void EP_setBackColor()
{
  dyn_errClass err;
  string node=$node;

  if( !dpExists( \"System1:N\"+node+\".Archiving.Status:_online.._value\"))
  {
    setValue(\"\", \"color\", \"_dpdoesnotexist\");
    return;
  }

  dpConnect(\"EP_setBackColorCB\", 
            \"System1:N\"+node+\".Archiving.Status:_online.._value\");
  err = getLastError();
  if (dynlen(err) > 0)
    setValue(\"\", \"color\", \"_dpdoesnotexist\");

}


void EP_setBackColorCB(string dpSource, bool boNewValue)
{
  if (!boNewValue)
    setValue(\"\", \"backCol\", \"Red\");
  else
    setValue(\"\", \"backCol\", \"S7_stateWentUnq\");
}

// SimpleCtrlScript {EP_setBackColor}
// DP {System1:N1.Archiving.Status}
// DPConfig {:_online.._value}
// DPType {bool}
// AlertHdl {FALSE}
// DPEInvalid {}
// DPEConfigInvalid {}
// Operator1 {notequal}
// Operant1 {0}
// Color1 {Red}
// Operator2 {equal}
// Operant2 {1}
// Color2 {S7_stateWentUnq}
// SimpleCtrlScriptEnd {EP_setBackColor}
" 0
 E 0 1 3 2 1 E 0.8611111111111138 0 0.8333333333333327 -320.9722222222339 -99.98826043533612 1 E 1901 161 9 9
29 31
"extraModule"
""
1 -9.089171974522316 789.3934925281044 E E E 1 E 1 E N "_3DText" E N "WF_PanelBackground" E E
 E E
31 0 0 0 0 0
E E E
0
1
LANG:1 0 

4
"horizontalScrollBarPolicy" "enum 1"
"verticalScrollBarPolicy" "enum 1"
"sizePolicy" "Fixed Expanding"
"layoutAlignment" "AlignNone"
1
LANG:1 27 Utopia,-1,12,5,50,0,0,0,0,0
0  0.9999999999999916 788.9999999999997 287.9999999999997 1066
15 Canvas.Canvas.1
0
"main()
{

     string node=$node;     
     this.ModuleName = \"extraModule\"+\"_N\"+node; 


}" 0
30 32
"testFrame"
""
1 380 114 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
32 0 0 0 0 0
E E E
1
1
LANG:1 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 0 1 0 1 E 0.1546511627906977 0 0.136029411764706 233.2325581395349 876.4926470588235 0 E 380 114 1241 931
1
LANG:1 27 Utopia,-1,16,5,75,0,0,0,0,0
0 1
LANG:1 11 Archive Run
13 33
"startButton"
""
1 313 944 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
33 0 0 0 0 0
E E E
8
1
LANG:1 0 

1
"layoutAlignment" "AlignNone"
1
LANG:1 27 Utopia,-1,16,5,75,0,0,0,0,0
0  310.9999999999997 935.9999999999994 401.9999999999997 963.9999999999995

T 
1
LANG:1 5 Start
"main(mapping event)
{
  string mode=$mode;
  string node=$node;
  string sector=$sector;
  int startNodeCosmics;
  if(mode==\"ValidationQA\")
  {
     time startTime=getCurrentTime();
     dpSet(\"N\"+node+\".Archiving.StartTime\",startTime); 
     dpSet(\"N\"+node+\".Archiving.EndTime\",\"\"); 
        

     string startString = formatTime(\"%d/%m/%Y %H:%M:%S\",startTime);    
     startDateField.text(substr(startString,0,10));
     startTimeField.text(substr(startString,11,8));
     this.enabled(FALSE);
     stopButton.enabled(TRUE);
     
    dpSet(\"N\"+node+\".runStatus\",TRUE);        
    dpConnect(\"pingChannels\",\"N\"+node+\".runStatus\");
    
  }
  
  if(mode==\"CosmicsBasic\" || mode==\"CosmicsExtra\" )
  {
     if(sector==\"1\")
       startNodeCosmics=1;
     if(sector==\"2\")
       startNodeCosmics=5;     
     
     time startTime=getCurrentTime();

     string startString = formatTime(\"%d/%m/%Y %H:%M:%S\",startTime);    
     startDateField.text(substr(startString,0,10));
     startTimeField.text(substr(startString,11,8));
     this.enabled(FALSE);
     stopButton.enabled(TRUE);     
     for(int i=startNodeCosmics;i<startNodeCosmics+4;i++)
     {
     dpSet(\"N\"+i+\".Archiving.StartTime\",startTime);  
     dpSet(\"N\"+i+\".Archiving.EndTime\",\"\");    
     dpSet(\"N\"+i+\".runStatus\",TRUE);  
    dpConnect(\"pingChannels\",\"N\"+i+\".runStatus\");     
     
     }   
  }  
  
  

    
}

void pingChannels(string dpSourceRunStatus, float fNewValueIsRunRunning)
{
  bool runStatus;
  string node=$node;
  string mode=$mode;
  for(int i=0;i<99999;i++)
  {
    dpGet(\"N\"+node+\".runStatus\",runStatus);
    if(runStatus)
    {
       delay(300);
       if(mode==\"ValidationQA\")
         channelsToPing(node);    
       if(mode==\"CosmicsBasic\" || mode==\"CosmicsExtra\")
       {
         string sector=$sector;
         int startNodeCosmics;
         if(sector==\"1\")
           startNodeCosmics=1;
         if(sector==\"2\")
           startNodeCosmics=5;   
         
     for(int z=startNodeCosmics;z<startNodeCosmics+4;z++)
     {
         channelsToPing(z);    
     }
         
       }
                 
     }
    else
      break;
   
  }
  
  
  
}

void channelsToPing(string node)
{
    string channel;
    float voltage,current;
    dyn_string stripsToAppend,driftToAppend,archivedChannel;
   dpGet(\"N\"+node+\".Mapping.ChannelsTotal.Strips\",stripsToAppend);   // Append Strips Channels  
   dpGet(\"N\"+node+\".Mapping.ChannelsTotal.Drift\",driftToAppend);   // Append Drift Channels
   dynAppend(archivedChannel,stripsToAppend);
   dynAppend(archivedChannel,driftToAppend);
   
   for(int h=1;h<=dynlen(archivedChannel);h++)
   {
      dpGet(\"N\"+node+\".Mapping.\"+archivedChannel[h]+\".Channel\",channel);
      dpGet(\"CAEN/\"+channel + \".actual.iMon:_original.._value\",voltage);  
      dpGet(\"CAEN/\"+channel + \".actual.vMon:_original.._value\",current);               
      dpSet(\"CAEN/\"+channel + \".actual.iMon:_original.._value\",voltage);  
      dpSet(\"CAEN/\"+channel + \".actual.vMon:_original.._value\",current);           
    }         
  
  
}" 0
 E E "// SimpleCtrlScriptStart {invalid}
main()
{
  EP_setEnabled();
}

void EP_setEnabled()
{
  string node=$node;
  dyn_errClass err;

  if( !dpExists( \"System1:N\"+node+\".runStatus:_online.._value\"))
  {
    setValue(\"\", \"color\", \"_dpdoesnotexist\");
    return;
  }

  dpConnect(\"EP_setEnabledCB\",
            \"System1:N\"+node+\".runStatus:_online.._value\");
  err = getLastError();
  if (dynlen(err) > 0)
    setValue(\"\", \"color\", \"_dpdoesnotexist\");

}


void EP_setEnabledCB(string dp, bool boNewValue)
{
    setValue(\"\", \"enabled\", !boNewValue);
}

// SimpleCtrlScript {EP_setEnabled}
// DP {System1:N1.runStatus}
// DPConfig {:_online.._value}
// DPType {bool}
// Active {0}
// Operator {less}
// Value {TRUE}
// SimpleCtrlScriptEnd {EP_setEnabled}
" 0

13 34
"stopButton"
""
1 311 947.0000000000001 E E E 0 E 1 E N "_ButtonText" E N "_Button" E E
 E E
34 0 0 0 0 0
E E E
8
1
LANG:1 0 

1
"layoutAlignment" "AlignNone"
1
LANG:1 27 Utopia,-1,16,5,75,0,0,0,0,0
0  309.9999999999998 966.9999999999993 400.9999999999997 994.9999999999998

T 
1
LANG:1 4 Stop
"main(mapping event)
{
  string mode=$mode;
  string node=$node;
  string sector=$sector;
  int startNodeCosmics;
  time endTime=getCurrentTime();
  string startTime;
  if(mode==\"ValidationQA\")
  {
     dpSet(\"N\"+node+\".runStatus\",FALSE);         
    
     dpGet(\"N\"+node+\".Archiving.StartTime\",startTime); 
     string startString = formatTime(\"%d/%m/%Y %H:%M:%S\",(time)startTime);    
     startDateField.text(substr(startString,0,10));
     startTimeField.text(substr(startString,11,8));   
     
     dpSet(\"N\"+node+\".Archiving.EndTime\",endTime); 
     string endString = formatTime(\"%d/%m/%Y %H:%M:%S\",endTime);    
     endDateField.text(substr(endString,0,10));
     endTimeField.text(substr(endString,11,8));

     this.enabled(FALSE);
     startButton.enabled(TRUE);
     exportLogbook(node);     
  }

 
  if(mode==\"CosmicsBasic\" || mode==\"CosmicsExtra\" )
  {
     if(sector==\"1\")
       startNodeCosmics=1;
     if(sector==\"2\")
       startNodeCosmics=5;       
     

     dpSet(\"N\"+sector+\".runStatus\",FALSE);         
     this.enabled(FALSE);
     startButton.enabled(TRUE); 
 
     dpGet(\"N\"+startNodeCosmics+\".Archiving.StartTime\",startTime); 
     string startString = formatTime(\"%d/%m/%Y %H:%M:%S\",(time)startTime);    
     startDateField.text(substr(startString,0,10));
     startTimeField.text(substr(startString,11,8));     
     
     string endString = formatTime(\"%d/%m/%Y %H:%M:%S\",endTime);    
     endDateField.text(substr(endString,0,10));
     endTimeField.text(substr(endString,11,8));     
     for(int i=startNodeCosmics;i<startNodeCosmics+4;i++)
     {
       dpSet(\"N\"+i+\".Archiving.EndTime\",endTime); 
       exportLogbook(i);             
       dpSet(\"N\"+i+\".runStatus\",FALSE);                      
       
     }      
     
   }
 
}" 0
 E E "// SimpleCtrlScriptStart {invalid}
main()
{
  EP_setEnabled();
}

void EP_setEnabled()
{
  string node=$node;
  dyn_errClass err;

  if( !dpExists( \"System1:N\"+node+\".runStatus:_online.._value\"))
  {
    setValue(\"\", \"color\", \"_dpdoesnotexist\");
    return;
  }

  dpConnect(\"EP_setEnabledCB\",
            \"System1:N\"+node+\".runStatus:_online.._value\");
  err = getLastError();
  if (dynlen(err) > 0)
    setValue(\"\", \"color\", \"_dpdoesnotexist\");

}


void EP_setEnabledCB(string dp, bool boNewValue)
{
    setValue(\"\", \"enabled\", boNewValue);
}

// SimpleCtrlScript {EP_setEnabled}
// DP {System1:N1.runStatus}
// DPConfig {:_online.._value}
// DPType {bool}
// Active {0}
// Operator {less}
// Value {TRUE}
// SimpleCtrlScriptEnd {EP_setEnabled}
" 0

2 38
"statusText"
""
1 305 916 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
38 0 0 0 0 0
E E E
0
1
LANG:1 0 

4
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"transformable" "0"
E E 2 1 3 2 1 E 1.0390625 0 1 -7.9140625 -4 0 E 305 916 395 934
0 2 2 "0s" 0 0 0 192 0 0  305 916 1
1
LANG:1 27 Utopia,-1,16,5,75,0,0,0,0,0
0 1
LANG:1 12 Run status :
7 41
"testStatus"
""
1 407.5 927.5 E E E 1 E 1 E N {0,0,0} E N "red" E E
 E E
41 0 0 0 0 0
E E E
0
1
LANG:1 0 

3
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "1"
"main()
{
  string node=$node;
  bool runStatus;
  dpGet(\"N\"+node+\".runStatus\",runStatus);
  if(runStatus)
  {
    dpSet(\"N\"+node+\".runStatus\",TRUE);        
    dpConnect(\"pingChannels\",\"N\"+node+\".runStatus\");  
    
  }
    
  
  
  EP_setBackColor();
}
void EP_setBackColor()
{
  dyn_errClass err;
  string node=$node;
  if( !dpExists( \"System1:N\"+node+\".runStatus:_online.._value\"))
  {
    setValue(\"\", \"color\", \"_dpdoesnotexist\");
    return;
  }

  dpConnect(\"EP_setBackColorCB\", 
            \"System1:N\"+node+\".runStatus:_online.._value\");
  err = getLastError();
  if (dynlen(err) > 0)
    setValue(\"\", \"color\", \"_dpdoesnotexist\");

}


void EP_setBackColorCB(string dpSource, bool boNewValue)
{
  if (!boNewValue)
    setValue(\"\", \"backCol\", \"Red\");
  else
    setValue(\"\", \"backCol\", \"S7_stateWentUnq\");
}

void pingChannels(string dpSourceRunStatus, float fNewValueIsRunRunning)
{
  bool runStatus;
  string node=$node;
  string mode=$mode;
  for(int i=0;i<99999;i++)
  {
    dpGet(\"N\"+node+\".runStatus\",runStatus);
    if(runStatus)
    {
       delay(300);
       if(mode==\"ValidationQA\")
         channelsToPing(node);    
       if(mode==\"CosmicsBasic\" || mode==\"CosmicsExtra\")
       {
         string sector=$sector;
         int startNodeCosmics;
         if(sector==\"1\")
           startNodeCosmics=1;
         if(sector==\"2\")
           startNodeCosmics=5;   
         
     for(int z=startNodeCosmics;z<startNodeCosmics+4;z++)
     {
         channelsToPing(z);    
     }
         
       }
                 
     }
    else
      break;
   
  }
  
  
  
}

void channelsToPing(string node)
{
    dyn_string channel;
    float voltage,current;
    dyn_string stripsToAppend,driftToAppend,archivedChannel;
   dpGet(\"N\"+node+\".Mapping.ChannelsTotal.Strips\",stripsToAppend);   // Append Strips Channels  
   dpGet(\"N\"+node+\".Mapping.ChannelsTotal.Drift\",driftToAppend);   // Append Drift Channels
   dynAppend(archivedChannel,stripsToAppend);
   dynAppend(archivedChannel,driftToAppend);
   
   for(int h=1;h<=dynlen(archivedChannel);h++)
   {
      dpGet(\"N\"+node+\".Mapping.\"+archivedChannel[h]+\".Channel\",channel[h]);
      dpGet(\"CAEN/\"+channel[h] + \".actual.iMon:_original.._value\",voltage);  
      dpGet(\"CAEN/\"+channel[h] + \".actual.vMon:_original.._value\",current);               
      dpSet(\"CAEN/\"+channel[h] + \".actual.iMon:_original.._value\",voltage);  
      dpSet(\"CAEN/\"+channel[h] + \".actual.vMon:_original.._value\",current);           
    }         
  
  
}
" 0
 E 0 1 3 2 1 E 0.7222222222222222 0 0.7592592592592593 113.9444444444444 217.5370370370368 1 E 407.5 927.5 13.5 13.5
7 43
"ELLIPSE5"
""
1 1777 46 E E E 1 E 1 E N {0,0,0} E N {255,255,255} E E
 E E
43 0 0 0 0 0
E E E
0
1
LANG:1 0 

3
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "1"
E E -1 1 3 2 1 E 1 0 1 6 0 2  1 0  "pictures/NTUA Logo/rsz_logo[80].png" 4294967295 E 1777 46 24 24
30 44
"FRAME5"
""
1 380 114 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
44 0 0 0 0 0
E E E
1
1
LANG:1 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 0 1 0 1 E 0.3255813953488373 0 0.1360294117647058 302.2790697674416 876.4926470588235 0 E 380 114 1241 931
1
LANG:1 27 Utopia,-1,16,5,75,0,0,0,0,0
0 1
LANG:1 6 Export
30 47
"FRAME6"
""
1 380 114 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
47 0 0 0 0 0
E E E
1
1
LANG:1 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 0 1 0 1 E 0.4813953488372092 0 0.08455882352941176 109.0697674418606 991.3602941176471 0 E 380 114 1241 931
1
LANG:1 27 Utopia,-1,16,5,75,0,0,0,0,0
0 1
LANG:1 8 Timeslot
13 50
"exportButton"
""
1 438.9999999999999 940 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
50 0 0 0 0 0
E E E
8
1
LANG:1 0 

1
"layoutAlignment" "AlignNone"
1
LANG:1 27 Utopia,-1,16,5,75,0,0,0,0,0
0  436.9999999999998 933.518959435626 571.9999999999998 964.4052028218691

T 
1
LANG:1 6 Export
"main()
{
    string node=$node;
    string sector=$sector;
    string mode=$mode;
    string chamberName, dirPath, batchID;
    dyn_string envChannels, gasChannels, humChannels, gifChannels;
    int startNode;
      if(sector==\"1\")
        startNode=1;
      if(sector==\"2\")
        startNode=5;
      
//         node=\"1\";
//         mode=\"ValidationQA\";
      
    bool isEnvOn, isGasOn, isHumOn,isGifOn;
    getValue(\"extraChoice\",\"state\",0,isEnvOn);
    getValue(\"extraChoice\",\"state\",1,isGasOn);
    getValue(\"extraChoice\",\"state\",2,isHumOn);
    getValue(\"extraChoice\",\"state\",3,isGifOn); 
    
    string startTime = getStartTime();
    string endTime   = getEndTime();    
    
    dyn_string stripsChannels, driftChannels;
    dyn_string mappingChannelsToArchive, channelsToArchive;
    this.enabled(FALSE);
    this.text(\"Please wait...\");
    
    
   if(mode==\"ValidationQA\")
    {
      dpGet(\"N\"+node+\".ChamberType\",chamberName);
      dpGet(\"N\"+node+\".BatchId\",batchID);
      dirPath = destFolderTextField.text + chamberName+\"_\"+batchID+\"_FROM_\"+startTime+\"_TO_\"+endTime+\"/\";     
      strreplace(dirPath,\":\",\"_\");
      strreplace(dirPath,\" \",\"_\");
      strreplace(dirPath,\".\",\"_\");
      checkOrCreateDirectory(dirPath);
      
      dynClear(stripsChannels);
      dpGet(\"N\"+node+\".Mapping.ChannelsTotal.Strips\",stripsChannels);
      dynClear(driftChannels);
      dpGet(\"N\"+node+\".Mapping.ChannelsTotal.Drift\",driftChannels);
      
      dynClear(mappingChannelsToArchive);
      dynAppend(mappingChannelsToArchive,stripsChannels);
      dynAppend(mappingChannelsToArchive,driftChannels);
      
      for(int i=1;i<=dynlen(mappingChannelsToArchive);i++)
      {
      dpGet(\"N\"+node+\".Mapping.\"+mappingChannelsToArchive[i]+\".Channel\",channelsToArchive[i]);        
      }
      
      
      exportHVData(\"iMon\", channelsToArchive, mappingChannelsToArchive, startTime, endTime, dirPath);     
      exportHVData(\"vMon\", channelsToArchive, mappingChannelsToArchive, startTime, endTime, dirPath); 
//       exportHVCombinedData(channelsToArchive, mappingChannelsToArchive, startTime, endTime, dirPath);  
      
      exportInfoFile(node, chamberName, batchID, mode, mappingChannelsToArchive, channelsToArchive, startTime, endTime, dirPath);
      
      if(isEnvOn)
       {
        dynAppend(envChannels,\"BME280.pressureMean\");
        dynAppend(envChannels,\"BME280.temperatureMean\");
        dynAppend(envChannels,\"BME280.humidityMean\");
        exportEnvData(envChannels ,startTime, endTime, dirPath);
       } 
      
      if(isHumOn)
       {
        dynClear(humChannels);
        dynAppend(humChannels,\"N\"+node+\".Gas.Humidity\");                            
        
        exportHumData(humChannels ,startTime, endTime, dirPath);
       }   
      
      if(isGasOn)
       {
        dynClear(gasChannels);
        dynAppend(gasChannels,\"N\"+node+\".Gas.Inlet\");     
        dynAppend(gasChannels,\"N\"+node+\".Gas.Outlet\");             
        dynAppend(gasChannels,\"N\"+node+\".Gas.Pressure\"); 
        
        exportGasData(gasChannels ,startTime, endTime, dirPath);
       }   

      if(isGifOn)
       {
       dynClear(gifChannels);
       //DownStreamPos Or UpStreamPos
       gifChannels[1]=\"GIFFPP.Irradiator.SourceON\";
       gifChannels[2]=\"GIFFPP.Attenuators.UpStreamPos.EffectiveAttenuation\";
       gifChannels[3]=\"GIFFPP.EnvParameters.Humidity_Inside_Bunker\";
       gifChannels[4]=\"GIFFPP.EnvParameters.Humidity_Outside_Bunker\";
       gifChannels[5]=\"GIFFPP.EnvParameters.Temp_Inside_Bunker\";
       gifChannels[6]=\"GIFFPP.EnvParameters.Temp_Outside_Bunker\";
       gifChannels[7]=\"GIFFPP.EnvParameters.Atmospheric_Pressure\";
       
        
      //  exportGIFData(gifChannels ,startTime, endTime, dirPath);
       
       //Edit v2.1.0

       exportIndividualDataGIF(\"Source\",\"[T/F]\",gifChannels[1],startTime, endTime, dirPath);
       exportIndividualDataGIF(\"EffectiveAttenuation\",\"[]\",gifChannels[2],startTime, endTime, dirPath);
       exportIndividualDataGIF(\"Humidity_Inside_Bunker\",\"[%]\",gifChannels[3],startTime, endTime, dirPath);
       exportIndividualDataGIF(\"Humidity_Outside_Bunker\",\"[%]\",gifChannels[4],startTime, endTime, dirPath);
       exportIndividualDataGIF(\"Temp_Inside_Bunker\",\"[C]\",gifChannels[5],startTime, endTime, dirPath);
       exportIndividualDataGIF(\"Temp_Outside_Bunker\",\"[C]\",gifChannels[6],startTime, endTime, dirPath);
       exportIndividualDataGIF(\"Atmospheric_Pressure\",\"[mbar]\",gifChannels[7],startTime, endTime, dirPath);
       
        
       }   
    
      
      
            
    }
    if(mode==\"CosmicsBasic\" || mode==\"CosmicsExtra\")
    {
      
      for(int z=startNode;z<startNode+4;z++)
      {
      dpGet(\"N\"+z+\".ChamberType\",chamberName);
      dpGet(\"N\"+z+\".BatchId\",batchID);
      dirPath = destFolderTextField.text + chamberName+\"_\"+batchID+\"_FROM_\"+startTime+\"_TO_\"+endTime+\"/\";     
      strreplace(dirPath,\":\",\"_\");
      strreplace(dirPath,\" \",\"_\");
      strreplace(dirPath,\".\",\"_\");
      checkOrCreateDirectory(dirPath);
      
      dynClear(stripsChannels);
      dpGet(\"N\"+z+\".Mapping.ChannelsTotal.Strips\",stripsChannels);
      dynClear(driftChannels);
      dpGet(\"N\"+z+\".Mapping.ChannelsTotal.Drift\",driftChannels);
      
      dynClear(mappingChannelsToArchive);
      dynAppend(mappingChannelsToArchive,stripsChannels);
      dynAppend(mappingChannelsToArchive,driftChannels);
      
      for(int i=1;i<=dynlen(mappingChannelsToArchive);i++)
      {
      dpGet(\"N\"+z+\".Mapping.\"+mappingChannelsToArchive[i]+\".Channel\",channelsToArchive[i]);        
      }
      
      
      exportHVData(\"iMon\", channelsToArchive, mappingChannelsToArchive, startTime, endTime, dirPath);     
      exportHVData(\"vMon\", channelsToArchive, mappingChannelsToArchive, startTime, endTime, dirPath);   
//       exportHVCombinedData(channelsToArchive, mappingChannelsToArchive, startTime, endTime, dirPath);     
      
      exportInfoFile(z, chamberName, batchID, mode, mappingChannelsToArchive, channelsToArchive, startTime, endTime, dirPath); 


      if(isEnvOn)
       {
        dynAppend(envChannels,\"BME280.pressureMean\");
        dynAppend(envChannels,\"BME280.temperatureMean\");
        dynAppend(envChannels,\"BME280.humidityMean\");
        exportEnvData(envChannels ,startTime, endTime, dirPath);
       }     
      if(isGasOn)
       {
        if(z==1 || z==2 )
        {
        dynAppend(gasChannels,\"N1.Gas.Inlet\");          
        dynAppend(gasChannels,\"N1.Gas.Outlet\");          
        dynAppend(gasChannels,\"N1.Gas.Pressure\");          
        }
         if(z==3 || z==4 )
        {
        dynAppend(gasChannels,\"N1.Gas.Inlet\");          
        dynAppend(gasChannels,\"N1.Gas.Outlet\");          
        dynAppend(gasChannels,\"N1.Gas.Pressure\");          
        }
        
        if(z==5 || z==6 )
        {
        dynAppend(gasChannels,\"N5.Gas.Inlet\");          
        dynAppend(gasChannels,\"N5.Gas.Outlet\");          
        dynAppend(gasChannels,\"N5.Gas.Pressure\");          
        }
         if(z==7 || z==8 )
        {
        dynAppend(gasChannels,\"N5.Gas.Inlet\");          
        dynAppend(gasChannels,\"N5.Gas.Outlet\");          
        dynAppend(gasChannels,\"N5.Gas.Pressure\");          
        }        
        
        

        exportGasData(gasChannels ,startTime, endTime, dirPath);
       }

      if(isHumOn)
       {
       dynClear(humChannels);
        if(z==1 || z==2 )     
          dynAppend(humChannels,\"N1.Gas.Humidity\");          
        if(z==3 || z==4 )
          dynAppend(humChannels,\"N2.Gas.Humidity\");                          
        if(z==5 || z==6 )
          dynAppend(humChannels,\"N5.Gas.Humidity\");                   
         if(z==7 || z==8 )
          dynAppend(humChannels,\"N6.Gas.Humidity\");                   
        
        exportHumData(humChannels ,startTime, endTime, dirPath);
       }    
      
      
      
        
      }

  
      
      
      
      
    }
    
   

    

    
    
    this.text(\"Export Data\");
    this.enabled(TRUE);
 
  
  
  
  
}
" 0
 E E E
19 51
"dataPlotsChoice"
""
1 432.0000000000002 972 E E E 0 E 1 E N "_3DText" E N "_3DFace" E E
 E E
51 0 0 0 0 0
E E E
0
1
LANG:1 0 

2
"layoutAlignment" "AlignNone"
"horizontal" ""
1
LANG:1 27 Utopia,-1,13,5,75,0,0,0,0,0
0  429.9999999999998 969.9999999999995 585.9999999999998 997.9999999999998
2
T 
1
LANG:1 4 Data

1 
1
LANG:1 0 
E E
0 0 0 0 0
T 
1
LANG:1 10 Data+Plots

0 
1
LANG:1 0 
E E
0 0 0 0 0
1
E E
2 97
"PRIMITIVE_TEXT5"
""
1 431 906 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
54 0 0 0 0 0
E E E
0
1
LANG:1 0 

4
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"transformable" "0"
E E 0 1 3 2 1 E U  0 E 431 906 457 921
0 2 2 "0s" 0 0 0 192 0 0  431 906 1
1
LANG:1 27 Utopia,-1,13,5,75,0,0,0,0,0
0 1
LANG:1 4 Dir:
14 98
"destFolderTextField"
""
1 458.9999999999999 909.3890288795477 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
55 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"layoutAlignment" "AlignNone"
1
LANG:1 27 Utopia,-1,11,5,50,0,0,0,0,0
0  456.9999999999998 905.9999999999998 675.9999999999998 923.9999999999995
3 "0s" 0 0 0 0 0 -1  E "main()
{

  this.text(PROJ_PATH+\"Export_Data/\");
}" 0
 E
13 99
"folderSelection"
""
1 680 911 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
56 0 0 0 0 0
E E E
8
1
LANG:1 0 

1
"layoutAlignment" "AlignNone"
1
LANG:1 31 Sans Serif,-1,12,5,50,0,0,0,0,0
0  677.9999999999998 902.7275308539556 702.9869171626978 926.2609167805255

P 
4294967295
"pictures/folderNew.png"
1
LANG:1 0 
"main()
{
   
    string sPath;
    string systemName;
    int iErr;
	
    if(shapeExists(\"cbSystem\"))
        systemName = cbSystem.text;
    else
        systemName = \"\";
  
    sPath = \"C:\\\\Projects\\\\TBSCS\";
    iErr = folderSelector( sPath );
    
    if(( iErr >= 1 ) && ( strlen( sPath ) > 0 )) {
	    sPath += \"/\";
        if (_WIN32) strreplace( sPath, \"/\", \"//\" ); 
    	strreplace(sPath, \"//\", \"/\");
        strreplace(sPath, \"//\", \"/\");
	    // update the widget with the directory path
        destFolderTextField.text = sPath;
    }
}" 0
 E E E
2 124
"notificationText"
""
1 1258 26 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
59 0 0 0 0 0
E E E
0
1
LANG:1 0 

4
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"transformable" "0"
E E 2 1 3 2 1 E 1.038461538461539 0 1.080033537302895 510.3791208791183 53.62522799482227 0 E 1258 26 1328 41
0 2 2 "0s" 0 0 0 192 0 0  1258 26 1
1
LANG:1 27 Utopia,-1,13,5,75,0,0,0,0,0
0 1
LANG:1 11 Email Alert
30 129
"FRAME10"
""
1 556 767 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
64 0 0 0 0 0
E E E
1
1
LANG:1 0 

3
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 2 1 3 2 1 E 0.6966193528693574 0 0.7543859649122789 1423.366452991449 -507.6140350877179 0 E 556 767 701 825
1
LANG:1 27 Utopia,-1,12,5,75,0,0,0,0,0
0 1
LANG:1 4 Trip
7 131
"statusEmail"
""
1 1901 161 E E E 1 E 1 E N {0,0,0} E N {255,255,255} E E
 E E
66 0 0 0 0 0
E E E
0
1
LANG:1 0 

3
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "1"
"// SimpleCtrlScriptStart {invalid}
main()
{
  EP_setBackColor();
}

void EP_setBackColor()
{
  dyn_errClass err;

  if( !dpExists( \"ALL.Notification.Email.Status:_online.._value\"))
  {
    setValue(\"\", \"color\", \"_dpdoesnotexist\");
    return;
  }

  dpConnect(\"EP_setBackColorCB\", 
            \"ALL.Notification.Email.Status:_online.._value\");
  err = getLastError();
  if (dynlen(err) > 0)
    setValue(\"\", \"color\", \"_dpdoesnotexist\");

}

void EP_setBackColorCB(string dpSource, bool boNewValue)
{
  if (!boNewValue)
    setValue(\"\", \"backCol\", \"Red\");
  else
    setValue(\"\", \"backCol\", \"Green\");
}

// SimpleCtrlScript {EP_setBackColor}
// DP {System1:ALL.Notification.StatusEmail}
// DPConfig {:_online.._value}
// DPType {bool}
// AlertHdl {FALSE}
// DPEInvalid {}
// DPEConfigInvalid {}
// Operator1 {notequal}
// Operant1 {0}
// Color1 {0}
// Operator2 {equal}
// Operant2 {1}
// Color2 {Green}
// SimpleCtrlScriptEnd {EP_setBackColor}
" 0
 E 0 1 3 2 1 E 0.8824175824176477 0 0.8190476190476218 246.9106810770423 18.11337982886705 1 E 1869.263736263735 87.21428571428568 7.5 7.5
2 160
"PRIMITIVE_TEXT7"
""
1 1258 26 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
73 0 0 0 0 0
E E E
0
1
LANG:1 0 

4
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"transformable" "0"
E E 2 1 3 2 1 E 1.038461538461539 0 1.080033537302895 510.2280219780198 68.76808513767944 0 E 1258 26 1317 41
0 2 2 "0s" 0 0 0 192 0 0  1258 26 1
1
LANG:1 27 Utopia,-1,13,5,75,0,0,0,0,0
0 1
LANG:1 8 Recovery
7 161
"ELLIPSE7"
""
1 1901 161 E E E 1 E 1 E N {0,0,0} E N {255,255,255} E E
 E E
74 0 0 0 0 0
E E E
0
1
LANG:1 0 

3
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "1"
"// SimpleCtrlScriptStart {invalid}
main()
{
  EP_setBackColor();
}

void EP_setBackColor()
{
  dyn_errClass err;
  string node=$node;
  

  if( !dpExists( \"N\"+node+\".AutoRecovery.Status:_online.._value\"))
  {
    setValue(\"\", \"color\", \"_dpdoesnotexist\");
    return;
  }

  dpConnect(\"EP_setBackColorCB\", 
            \"N\"+node+\".AutoRecovery.Status:_online.._value\");
  err = getLastError();
  if (dynlen(err) > 0)
    setValue(\"\", \"color\", \"_dpdoesnotexist\");

}

void EP_setBackColorCB(string dpSource, bool boNewValue)
{
  if (!boNewValue)
    setValue(\"\", \"backCol\", \"Red\");
  else
    setValue(\"\", \"backCol\", \"Green\");
}

// SimpleCtrlScript {EP_setBackColor}
// DP {System1:ALL.Notification.StatusEmail}
// DPConfig {:_online.._value}
// DPType {bool}
// AlertHdl {FALSE}
// DPEInvalid {}
// DPEConfigInvalid {}
// Operator1 {notequal}
// Operant1 {0}
// Color1 {0}
// Operator2 {equal}
// Operant2 {1}
// Color2 {Green}
// SimpleCtrlScriptEnd {EP_setBackColor}
" 0
 E 0 1 3 2 1 E 0.8824175824176477 0 0.8190476190476218 246.7595821759438 33.25623697172421 1 E 1869.263736263735 87.21428571428568 7.5 7.5
30 162
"FRAME11"
""
1 1214 888 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
75 0 0 0 0 0
E E E
1
1
LANG:1 0 

3
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 2 1 3 2 1 E 0.765625 0 0.9999999999999999 -221.46875 3.999999999999922 0 E 1214 888 1407 1067
1
LANG:1 27 Utopia,-1,15,5,75,0,0,0,0,0
0 1
LANG:1 13 Trip Recovery
29 163
"ToggleSwitch_ewo1"
""
1 777 924 E E E 1 E 1 E N "white" E N "_3DFace" E E
 E E
76 0 0 0 0 0
E E E
0
1
LANG:1 0 

5
"skin" "enum 2"
"textOff" "string OFF"
"textOn" "string ON"
"checked" "bool FALSE"
"layoutAlignment" "AlignNone"
1
LANG:1 27 Utopia,-1,19,5,75,0,0,0,0,0
0  777 924 847 952
16 ToggleSwitch.ewo
1
0 "toggled" "(bool on)"
"  string node=$node;
  string mode=$mode;
  string sector=$sector;
  
     if(mode==\"ValidationQA\")     
  {
  if(on)
  {
    this.foreCol(\"Green\");
    dpSet(\"N\"+node+\".AutoRecovery.Status\",1);    
  }
  else
  {
    this.foreCol(\"Red\");
    dpSet(\"N\"+node+\".AutoRecovery.Status\",0);    
  }
    
    
  }
  
   if(mode==\"CosmicsBasic\" || mode==\"CosmicsExtra\")     
  {
    
       int nodeStart;
    if(sector==\"1\")
        nodeStart=1;
    if(sector==\"2\")
        nodeStart=5; 
    
  if(on)
  {
    this.foreCol(\"Green\");
    for(int i=nodeStart;i<4+nodeStart;i++)
    {
    dpSet(\"N\"+i+\".AutoRecovery.Status\",1);    
    }
  }
  else
  {
    this.foreCol(\"Red\");
    for(int i=nodeStart;i<4+nodeStart;i++)
    {
    dpSet(\"N\"+i+\".AutoRecovery.Status\",1);    
    }
  }
    
    
  } 
"
"main()
{
   string mode=$mode;
   string node=$node;
   string sector=$sector;
   bool autoRecovery;
   
   if(mode==\"ValidationQA\")     
     {  
       dpGet(\"N\"+node+\".AutoRecovery.Status\",autoRecovery);   
       if(autoRecovery)
      {
        this.foreCol(\"Green\");
        this.checked(1);
      }
      else
      {
    this.foreCol(\"Red\");
    this.checked(0);  
      }     
          
    }
   
  
   if(mode==\"CosmicsBasic\" || mode==\"CosmicsExtra\")     
     {  

    int nodeStart;
    if(sector==\"1\")
        nodeStart=1;
    if(sector==\"2\")
        nodeStart=5; 
    
       dpGet(\"N\"+nodeStart+\".AutoRecovery.Status\",autoRecovery);   
       
       if(autoRecovery)
      {
        this.foreCol(\"Green\");
        this.checked(1);
      }
      else
      {
    this.foreCol(\"Red\");
    this.checked(0);  
      }        
    
    
     
   }
  

      
}
    
 
  " 0
2 164
"PRIMITIVE_TEXT8"
""
1 715 928 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
77 0 0 0 0 0
E E E
0
1
LANG:1 0 

4
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"transformable" "0"
E E 2 1 3 2 1 E U  0 E 715 928 772 946
0 2 2 "0s" 0 0 0 192 0 0  715 928 1
1
LANG:1 27 Utopia,-1,16,5,75,0,0,0,0,0
0 1
LANG:1 8 Status :
2 167
"PRIMITIVE_TEXT10"
""
1 715 976.9999999999993 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
80 0 0 0 0 0
E E E
0
1
LANG:1 0 

4
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"transformable" "0"
E E 2 1 3 2 1 E U  0 E 715 976.9999999999993 773 995
0 2 2 "0s" 0 0 0 192 0 0  715 976.9999999999993 1
1
LANG:1 27 Utopia,-1,16,5,75,0,0,0,0,0
0 1
LANG:1 9 Vsub    :
22 169
"COMBO_BOX1"
""
1 777 981 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
82 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"layoutAlignment" "AlignNone"
1
LANG:1 27 Utopia,-1,19,5,75,0,0,0,0,0
0  775 970 839 1004
7
1
LANG:1 1 0

0
1
LANG:1 1 5

0
1
LANG:1 2 10

0
1
LANG:1 2 15

0
1
LANG:1 2 20

0
1
LANG:1 2 30

0
1
LANG:1 2 50

0

"main()
{
   string mode=$mode;
   string node=$node;
   string sector=$sector;
   float voltageSub;
   
   if(mode==\"ValidationQA\")     
     {  
      dpGet(\"N\"+node+\".AutoRecovery.voltageSub\",voltageSub);
      this.text(voltageSub);           
    }
   
  
   if(mode==\"CosmicsBasic\" || mode==\"CosmicsExtra\")     
     {  
      
    int nodeStart;
    if(sector==\"1\")
        nodeStart=1;
    if(sector==\"2\")
        nodeStart=5; 
    
      dpGet(\"N\"+nodeStart+\".AutoRecovery.voltageSub\",voltageSub);
      this.text(voltageSub);   
                  
   }
        
}
    
 
  " 0

"main()
{
   string mode=$mode;
   string node=$node;
   string sector=$sector;
   float voltageSub=this.text();
   
   if(mode==\"ValidationQA\")     
     {  
      dpSet(\"N\"+node+\".AutoRecovery.voltageSub\",voltageSub);
    }
   
  
   if(mode==\"CosmicsBasic\" || mode==\"CosmicsExtra\")     
     {  
      
    int nodeStart;
    if(sector==\"1\")
        nodeStart=1;
    if(sector==\"2\")
        nodeStart=5; 
    
    for(int i=nodeStart;i<4+nodeStart;i++)
    {
      dpSet(\"N\"+i+\".AutoRecovery.voltageSub\",voltageSub);
    }
    

                  
   }
        
}
    
 
  " 0

E
 0 0
2 170
"PRIMITIVE_TEXT11"
""
1 714 1019 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
83 0 0 0 0 0
E E E
0
1
LANG:1 0 

4
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"transformable" "0"
E E 2 1 3 2 1 E U  0 E 714 1019 854 1058
0 2 2 "0s" 0 0 0 192 0 0  714 1019 2
1
LANG:1 27 Utopia,-1,16,5,50,0,0,0,0,0
0 1
LANG:1 5 Info:
1
LANG:1 27 Utopia,-1,16,5,50,0,0,0,0,0
0 1
LANG:1 19 ( Trip->Vset-Vsub )
30 171
"FRAME12"
""
1 1214 888 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
84 0 0 0 0 0
E E E
1
1
LANG:1 0 

3
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 2 1 3 2 1 E 1.838541666666667 0 0.9999999999999999 -1375.989583333334 4.000000000000146 0 E 1214 888 1407 1067
1
LANG:1 27 Utopia,-1,15,5,75,0,0,0,0,0
0 1
LANG:1 12 Auto Ramp Up
14 174
"vStart0"
""
1 911 928 E E E 0 E 1 E N "_WindowText" E N "_Window" E E
 E E
87 0 0 0 0 0
E E E
0
1
LANG:1 0 

2
"layoutAlignment" "AlignNone"
"textChangedCB" "main(string newText)
{
  checkInputs(0);
}"
1
LANG:1 27 Utopia,-1,15,5,75,0,0,0,0,0
0  909 922 965 951
2 "3s" 3 0 0 1 0 -1  E E E
14 175
"vEnd0"
""
1 880 916 E E E 0 E 1 E N "_WindowText" E N "_Window" E E
 E E
88 0 0 0 0 0
E E E
0
1
LANG:1 0 

2
"layoutAlignment" "AlignNone"
"textChangedCB" "main(string newText)
{
  checkInputs(0);
}"
1
LANG:1 27 Utopia,-1,15,5,75,0,0,0,0,0
0  988 922 1044 951
2 "3s" 3 0 0 1 0 -1  E E E
4 177
"LINE1"
""
1 963 933 E E E 1 E 1 E N {0,0,0} E N {255,255,255} E E
 E E
90 0 0 0 0 0
E E E
0
1
LANG:1 0 

3
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "1"
E E 0 2 3 2 1 E  963 933 989 933
2 178
"PRIMITIVE_TEXT12"
""
1 917 906 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
91 0 0 0 0 0
E E E
0
1
LANG:1 0 

4
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"transformable" "0"
E E 2 1 3 2 1 E U  0 E 917 906 956 921
0 2 2 "0s" 0 0 0 192 0 0  917 906 1
1
LANG:1 27 Utopia,-1,13,5,75,0,0,0,0,0
0 1
LANG:1 6 Vstart
2 179
"PRIMITIVE_TEXT13"
""
1 999 906 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
92 0 0 0 0 0
E E E
0
1
LANG:1 0 

4
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"transformable" "0"
E E 2 1 3 2 1 E U  0 E 999 906 1033 921
0 2 2 "0s" 0 0 0 192 0 0  999 906 1
1
LANG:1 27 Utopia,-1,13,5,75,0,0,0,0,0
0 1
LANG:1 4 Vend
2 180
"PRIMITIVE_TEXT14"
""
1 1062 906 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
93 0 0 0 0 0
E E E
0
1
LANG:1 0 

4
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"transformable" "0"
E E 2 1 3 2 1 E U  0 E 1062 906 1129 921
0 2 2 "0s" 0 0 0 192 0 0  1062 906 1
1
LANG:1 27 Utopia,-1,13,5,75,0,0,0,0,0
0 1
LANG:1 10 Delay/step
14 181
"delay0"
""
1 876 916 E E E 0 E 1 E N "_WindowText" E N "_Window" E E
 E E
94 0 0 0 0 0
E E E
0
1
LANG:1 0 

2
"layoutAlignment" "AlignNone"
"textChangedCB" "main(string newText)
{
  checkInputs(0);
}"
1
LANG:1 27 Utopia,-1,15,5,75,0,0,0,0,0
0  1063 922 1121 951
2 "3s" 3 0 0 1 0 -1  E E E
2 184
"PRIMITIVE_TEXT16"
""
1 892 928 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
97 0 0 0 0 0
E E E
0
1
LANG:1 0 

4
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"transformable" "0"
E E 2 1 3 2 1 E U  0 E 892 928 908 946
0 2 2 "0s" 0 0 0 192 0 0  892 928 1
1
LANG:1 27 Utopia,-1,16,5,75,0,0,0,0,0
0 1
LANG:1 2 1.
20 185
"stepBox"
""
1 868 913.9999999999997 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
98 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"layoutAlignment" "AlignNone"
1
LANG:1 27 Utopia,-1,12,5,50,0,0,0,0,0
0  866 911.9999999999997 885 1053
4
T 
1
LANG:1 0 

0 
1
LANG:1 0 
E E
0 0 0 0 0
T 
1
LANG:1 0 

0 
1
LANG:1 0 
E E
0 0 0 0 0
T 
1
LANG:1 0 

0 
1
LANG:1 0 
E E
0 0 0 0 0
T 
1
LANG:1 0 

0 
1
LANG:1 0 
E E
0 0 0 0 0
0
"main()
{
    
  stepBox.itemEnabled(0,1);
  stepBox.itemEnabled(1,0); 
  stepBox.itemEnabled(2,0);
  stepBox.itemEnabled(3,0);   
}" 0
"main(int button, int state)
{

  setValue(\"vStart\"+button,\"enabled\",state);  
  setValue(\"vEnd\"+button,\"enabled\",state);    
  setValue(\"delay\"+button,\"enabled\",state);    
  setValue(\"status\"+button,\"enabled\",state);    
  
  setValue(\"vStart\"+button,\"editable\",state);  
  setValue(\"vEnd\"+button,\"editable\",state);    
  setValue(\"delay\"+button,\"editable\",state);  


   
  if(button==3)
  {
  checkInputs(0);
  checkInputs(1);  
  checkInputs(2);  
  checkInputs(3);        
  }

  if(button==2)
  {
  checkInputs(0);
  checkInputs(1);  
  checkInputs(2);      
  }  

  
    if(button==1)
  {
  checkInputs(0);
  checkInputs(1);  
  }  
 
 
    if(button==0)
  {
  checkInputs(0);
  }  
 
    if(state==0)
  {
   stepBox.itemEnabled(button+1,0);  
  setValue(\"vStart\"+button,\"text\",\"\");  
  setValue(\"vEnd\"+button,\"text\",\"\");    
  setValue(\"delay\"+button,\"text\",\"\");    
  setValue(\"status\"+button,\"text\",\"\");
  setValue(\"status\"+button,\"backCol\",\"_Window\");        
  }  
  
  
  
}" 0
14 188
"status0"
""
1 955 918 E E E 0 E 1 E N "_WindowText" E N "_Window" E E
 E E
101 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"layoutAlignment" "AlignNone"
1
LANG:1 27 Utopia,-1,12,5,75,0,0,0,0,0
0  1142 924 1200 949
2 "0s" 0 0 0 1 0 -1  E E E
2 189
"PRIMITIVE_TEXT17"
""
1 1152 906 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
102 0 0 0 0 0
E E E
0
1
LANG:1 0 

4
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"transformable" "0"
E E 2 1 3 2 1 E U  0 E 1152 906 1192 921
0 2 2 "0s" 0 0 0 192 0 0  1152 906 1
1
LANG:1 27 Utopia,-1,13,5,75,0,0,0,0,0
0 1
LANG:1 6 Status
4 191
"LINE3"
""
1 857 952 E E E 1 E 1 E N {0,0,0} E N {255,255,255} E E
 E E
104 0 0 0 0 0
E E E
0
1
LANG:1 0 

3
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "1"
E E 0 1 3 2 1 E  857 952 1207 952
4 192
"LINE4"
""
1 857 921 E E E 1 E 1 E N {0,0,0} E N {255,255,255} E E
 E E
105 0 0 0 0 0
E E E
0
1
LANG:1 0 

3
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "1"
E E 0 1 3 2 1 E  857 921 1207 921
14 200
"vStart1"
""
1 911 958 E E E 0 E 1 E N "_WindowText" E N "_Window" E E
 E E
113 0 0 0 0 0
E E E
0
1
LANG:1 0 

2
"layoutAlignment" "AlignNone"
"textChangedCB" "main(string newText)
{
  checkInputs(1);
}"
1
LANG:1 27 Utopia,-1,15,5,75,0,0,0,0,0
0  908.9999999999999 952 964.9999999999999 981
2 "3s" 3 0 0 1 0 -1  E E E
14 201
"vEnd1"
""
1 880 946 E E E 0 E 1 E N "_WindowText" E N "_Window" E E
 E E
114 0 0 0 0 0
E E E
0
1
LANG:1 0 

2
"layoutAlignment" "AlignNone"
"textChangedCB" "main(string newText)
{
  checkInputs(1);
}"
1
LANG:1 27 Utopia,-1,15,5,75,0,0,0,0,0
0  988 952 1044 981
2 "3s" 3 0 0 1 0 -1  E E E
4 202
"LINE7"
""
1 963 964 E E E 1 E 1 E N {0,0,0} E N {255,255,255} E E
 E E
115 0 0 0 0 0
E E E
0
1
LANG:1 0 

3
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "1"
E E 0 2 3 2 1 E  963 964 989 964
14 203
"delay1"
""
1 876 946 E E E 0 E 1 E N "_WindowText" E N "_Window" E E
 E E
116 0 0 0 0 0
E E E
0
1
LANG:1 0 

2
"layoutAlignment" "AlignNone"
"textChangedCB" "main(string newText)
{
  checkInputs(1);
}"
1
LANG:1 27 Utopia,-1,15,5,75,0,0,0,0,0
0  1063 952 1121 981
2 "3s" 3 0 0 1 0 -1  E E E
2 204
"PRIMITIVE_TEXT19"
""
1 892 958 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
117 0 0 0 0 0
E E E
0
1
LANG:1 0 

4
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"transformable" "0"
E E 2 1 3 2 1 E U  0 E 892 958 908 976
0 2 2 "0s" 0 0 0 192 0 0  892 958 1
1
LANG:1 27 Utopia,-1,16,5,75,0,0,0,0,0
0 1
LANG:1 2 2.
14 205
"status1"
""
1 955 948 E E E 0 E 1 E N "_WindowText" E N "_Window" E E
 E E
118 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"layoutAlignment" "AlignNone"
1
LANG:1 27 Utopia,-1,12,5,75,0,0,0,0,0
0  1142 954 1200 979
2 "0s" 0 0 0 1 0 -1  E E E
4 206
"LINE8"
""
1 857 982 E E E 1 E 1 E N {0,0,0} E N {255,255,255} E E
 E E
119 0 0 0 0 0
E E E
0
1
LANG:1 0 

3
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "1"
E E 0 1 3 2 1 E  857 982 1207 982
14 207
"vStart2"
""
1 911 987 E E E 0 E 1 E N "_WindowText" E N "_Window" E E
 E E
120 0 0 0 0 0
E E E
0
1
LANG:1 0 

2
"layoutAlignment" "AlignNone"
"textChangedCB" "main(string newText)
{
  checkInputs(2);
}"
1
LANG:1 27 Utopia,-1,15,5,75,0,0,0,0,0
0  908.9999999999999 981 964.9999999999999 1010
2 "3s" 3 0 0 1 0 -1  E E E
14 208
"vEnd2"
""
1 880 975 E E E 0 E 1 E N "_WindowText" E N "_Window" E E
 E E
121 0 0 0 0 0
E E E
0
1
LANG:1 0 

2
"layoutAlignment" "AlignNone"
"textChangedCB" "main(string newText)
{
  checkInputs(2);
}"
1
LANG:1 27 Utopia,-1,15,5,75,0,0,0,0,0
0  988 981 1044 1010
2 "3s" 3 0 0 1 0 -1  E E E
4 209
"LINE9"
""
1 963 993 E E E 1 E 1 E N {0,0,0} E N {255,255,255} E E
 E E
122 0 0 0 0 0
E E E
0
1
LANG:1 0 

3
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "1"
E E 0 2 3 2 1 E  963 993 989 993
14 210
"delay2"
""
1 876 975 E E E 0 E 1 E N "_WindowText" E N "_Window" E E
 E E
123 0 0 0 0 0
E E E
0
1
LANG:1 0 

2
"layoutAlignment" "AlignNone"
"textChangedCB" "main(string newText)
{
  checkInputs(2);
}"
1
LANG:1 27 Utopia,-1,15,5,75,0,0,0,0,0
0  1063 981 1121 1010
2 "3s" 3 0 0 1 0 -1  E E E
2 211
"PRIMITIVE_TEXT20"
""
1 893 989 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
124 0 0 0 0 0
E E E
0
1
LANG:1 0 

4
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"transformable" "0"
E E 2 1 3 2 1 E U  0 E 893 989 909 1007
0 2 2 "0s" 0 0 0 192 0 0  893 989 1
1
LANG:1 27 Utopia,-1,16,5,75,0,0,0,0,0
0 1
LANG:1 2 3.
14 212
"status2"
""
1 955 977 E E E 0 E 1 E N "_WindowText" E N "_Window" E E
 E E
125 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"layoutAlignment" "AlignNone"
1
LANG:1 27 Utopia,-1,12,5,75,0,0,0,0,0
0  1142 983 1200 1008
2 "0s" 0 0 0 1 0 -1  E E E
4 213
"LINE10"
""
1 858 1011 E E E 1 E 1 E N {0,0,0} E N {255,255,255} E E
 E E
126 0 0 0 0 0
E E E
0
1
LANG:1 0 

3
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "1"
E E 0 1 3 2 1 E  858 1011 1208 1011
14 214
"vStart3"
""
1 911 1017 E E E 0 E 1 E N "_WindowText" E N "_Window" E E
 E E
127 0 0 0 0 0
E E E
0
1
LANG:1 0 

2
"layoutAlignment" "AlignNone"
"textChangedCB" "main(string newText)
{
  checkInputs(3);
}"
1
LANG:1 27 Utopia,-1,15,5,75,0,0,0,0,0
0  908.9999999999999 1011 964.9999999999999 1040
2 "3s" 3 0 0 1 0 -1  E E E
14 215
"vEnd3"
""
1 880 1005 E E E 0 E 1 E N "_WindowText" E N "_Window" E E
 E E
128 0 0 0 0 0
E E E
0
1
LANG:1 0 

2
"layoutAlignment" "AlignNone"
"textChangedCB" "main(string newText)
{
  checkInputs(3);
}"
1
LANG:1 27 Utopia,-1,15,5,75,0,0,0,0,0
0  988 1011 1044 1040
2 "3s" 3 0 0 1 0 -1  E E E
4 216
"LINE11"
""
1 964 1023 E E E 1 E 1 E N {0,0,0} E N {255,255,255} E E
 E E
129 0 0 0 0 0
E E E
0
1
LANG:1 0 

3
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "1"
E E 0 2 3 2 1 E  964 1023 990 1023
14 217
"delay3"
""
1 876 1005 E E E 0 E 1 E N "_WindowText" E N "_Window" E E
 E E
130 0 0 0 0 0
E E E
0
1
LANG:1 0 

2
"layoutAlignment" "AlignNone"
"textChangedCB" "main(string newText)
{
  checkInputs(3);
}"
1
LANG:1 27 Utopia,-1,15,5,75,0,0,0,0,0
0  1063 1011 1121 1040
2 "3s" 3 0 0 1 0 -1  E E E
2 218
"PRIMITIVE_TEXT21"
""
1 894 1019 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
131 0 0 0 0 0
E E E
0
1
LANG:1 0 

4
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"transformable" "0"
E E 2 1 3 2 1 E U  0 E 894 1019 910 1037
0 2 2 "0s" 0 0 0 192 0 0  894 1019 1
1
LANG:1 27 Utopia,-1,16,5,75,0,0,0,0,0
0 1
LANG:1 2 4.
14 219
"status3"
""
1 955 1007 E E E 0 E 1 E N "_WindowText" E N "_Window" E E
 E E
132 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"layoutAlignment" "AlignNone"
1
LANG:1 27 Utopia,-1,12,5,75,0,0,0,0,0
0  1142 1013 1200 1038
3 "0s" 0 0 0 1 0 -1  E E E
4 220
"LINE12"
""
1 859 1040 E E E 1 E 1 E N {0,0,0} E N {255,255,255} E E
 E E
133 0 0 0 0 0
E E E
0
1
LANG:1 0 

3
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "1"
E E 0 1 3 2 1 E  859 1040 1209 1040
4 221
"LINE13"
""
1 1054 920.9999999999999 E E E 1 E 1 E N {0,0,0} E N {255,255,255} E E
 E E
134 0 0 0 0 0
E E E
0
1
LANG:1 0 

3
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "1"
E E 0 1 3 2 1 E  1054 920.9999999999999 1054 1039
4 222
"LINE14"
""
1 1135 921 E E E 1 E 1 E N {0,0,0} E N {255,255,255} E E
 E E
135 0 0 0 0 0
E E E
0
1
LANG:1 0 

3
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "1"
E E 0 1 3 2 1 E  1135 921 1135 1039
13 224
"startAuto"
""
1 940 1049 E E E 0 E 1 E N "_ButtonText" E N "_Button" E E
 E E
137 0 0 0 0 0
E E E
8
1
LANG:1 0 

1
"layoutAlignment" "AlignNone"
1
LANG:1 27 Utopia,-1,16,5,75,0,0,0,0,0
0  938 1043 1029 1067

T 
1
LANG:1 5 Start
E E E E
13 225
"abortAuto"
""
1 1046 1049 E E E 0 E 1 E N "_ButtonText" E N "_Button" E E
 E E
138 0 0 0 0 0
E E E
8
1
LANG:1 0 

1
"layoutAlignment" "AlignNone"
1
LANG:1 27 Utopia,-1,16,5,75,0,0,0,0,0
0  1044 1043 1135 1067

T 
1
LANG:1 5 Abort
E E E E
0
LAYER, 1 
1
LANG:1 0 
0
LAYER, 2 
1
LANG:1 0 
0
LAYER, 3 
1
LANG:1 0 
0
LAYER, 4 
1
LANG:1 0 
0
LAYER, 5 
1
LANG:1 0 
0
LAYER, 6 
1
LANG:1 0 
0
LAYER, 7 
1
LANG:1 0 
0
1 0 "SHAPE_GROUP3" -1
11 0 
9 10 11 12 13 14 15 16 20 21 22 

"layoutAlignment" "AlignNone"
"" ""
1 1 "SHAPE_GROUP9" -1
4 0 
23 25 26 43 

"layoutAlignment" "AlignNone"
"" ""
0
